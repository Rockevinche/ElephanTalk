{"version":3,"sources":["Services/UserServices.js","Assets/Logo.svg","Components/HomeComponents/HamburgerMenu.jsx","Components/HomeComponents/MobileMenuButton.jsx","Assets/ImageNotFound.svg","Components/HomeComponents/Feed/BodyPost.jsx","Components/LoginComponents/ShowMessage.jsx","Components/HomeComponents/Feed/CommentsPost.jsx","Components/HomeComponents/Feed/ControlsPost.jsx","Components/HomeComponents/Feed/HeaderPost.jsx","Components/HomeComponents/Feed/Post.jsx","Components/HomeComponents/Loading.jsx","Components/HomeComponents/Feed/PostList.jsx","Views/Home.js","Components/CreateEditPostComponents/ButtonPost.jsx","Components/CreateEditPostComponents/InputPost.jsx","Components/CreateEditPostComponents/TextAreaPost.jsx","Views/CreatePost.js","Components/PostDetailsComponents/HeaderDetails.jsx","Components/PostDetailsComponents/BodyDetails.jsx","Components/PostDetailsComponents/ControlsDetails.jsx","Components/PostDetailsComponents/CommentFormDetails.jsx","Components/PostDetailsComponents/CommentDetails.jsx","Components/PostDetailsComponents/CommentListDetails.jsx","Views/PostDetails.js","Views/EditPost.js","Routes/AdminRouter.js","Routes/UserRouter.js","Components/LoginComponents/LoginInput.jsx","Components/LoginComponents/LoginButton.jsx","Views/Login.js","Routes/AuthRouter.js","Routes/PrincipalRouter.js","App.js","index.js"],"names":["BASE_URL","UserServices","getOnePost","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","id","response","post","wrap","_context","prev","next","fetch","concat","method","headers","sent","ok","json","abrupt","stop","_x","_x2","apply","arguments","login","_ref2","_callee2","username","password","_yield$response$json","_context2","body","JSON","stringify","undefined","_x3","_x4","verifyToken","_ref3","_callee3","data","_context3","_x5","getAllPosts","_ref4","_callee4","pages","_yield$response$json2","posts","_context4","_x6","_x7","getOwnedPosts","_ref5","_callee5","_yield$response$json3","_context5","_x8","_x9","getFavoritePosts","_ref6","_callee7","_yield$response$json4","favorites","favoritePostsPromises","favoritePosts","filteredPosts","_context7","map","_ref7","_callee6","favorite","_context6","_x11","Promise","all","filter","Object","keys","length","_x10","getFavoritesIds","_ref8","_callee8","_yield$response$json5","_context8","_x12","createPost","_ref9","_callee9","_context9","_x13","_x14","updatePost","_ref10","_callee10","_context10","_x15","_x16","_x17","toggleActive","_ref11","_callee11","_context11","_x18","_x19","like","_ref12","_callee12","_context12","_x20","_x21","_ref13","_callee13","_context13","_x22","_x23","comment","_ref14","_callee14","_context14","_x24","_x25","_x26","getPagesAll","_ref15","_callee15","_yield$response$json6","_context15","_x27","getPagesOwned","_ref16","_callee16","_yield$response$json7","_context16","_x28","HamburgerMenu","showHamburguer","onLogOut","role","onFavoritePost","onAllPosts","onOwnedPosts","onAddPost","HamburguerMenuStyles","_jsxs","className","children","_jsx","onClick","MobileMenuButton","setShowHamburguer","buttonCloseStyles","buttonOpenStyles","title","xmlns","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","BodyPost","image","description","active","src","onError","e","target","onerror","ImageNotFound","alt","Link","to","ShowMessage","message","fillRule","clipRule","CommentsPost","likes","comments","setPosts","_useState","useState","_useState2","_slicedToArray","commentInput","setCommentInput","_useState3","_useState4","setMessage","_useState5","_useState6","showMessage","setShowMessage","localStorage","getItem","onSubmit","preventDefault","_id","_objectSpread","_toConsumableArray","setTimeout","TruncateLikesOrComments","cantidad","toFixed","type","class","placeholder","autocomplete","value","onChange","_e$target","name","_defineProperty","required","ControlsPost","verifyuser","verifyLike","verifyFavorite","onEdit","onHidde","onLike","onFavorite","width","HeaderPost","Post","activeUsername","setFavorites","setIsHidden","setIsAddingFavorite","navigate","useNavigate","user","useEffect","_getFavorites","getFavorites","newLikes","some","element","i","includes","isActiveUserPost","alreadyLiked","isFavorite","classNameName","Loading","_ref$message","PostList","currentPage","fetchNextPage","hasNextPage","isLoading","InfiniteScroll","dataLength","hasMore","loader","endMessage","Home","setToken","setCurrentPage","pagesAll","setPagesAll","_useState7","_useState8","pageAll","setPageAll","_useState9","_useState10","pagesOwned","setPagesOwned","_useState11","_useState12","pageOwned","setPageOwned","_useState13","_useState14","setHasNextPage","_useState15","_useState16","isHidden","_useState17","_useState18","isAddingFavorite","_useState19","_useState20","isChanging","setIsChanging","_useState21","_useState22","setIsLoading","_useState23","_useState24","_getPosts","postsFetch","t0","t1","t2","t3","getPosts","_getPosts2","newPosts","actualPage","auxPosts","_newPosts","_actualPage","_i","_auxPosts","_whenChange","window","scrollTo","whenChange","prevPage","Logo","removeItem","ButtonPost","_ref$type","child","onReturnHome","InputPost","TextAreaPost","CreatePost","setPost","handleInputChange","change","onCreatePost","HeaderDetails","BodyDetails","ControlsDetails","verifyUser","CommentFormDetails","Date","toLocaleString","CommentDetails","CommentListDetails","PostDetails","isError","setIsError","idPost","useParams","postView","setPostView","_getPost","newPost","getPost","EditPost","_yield$getOnePost","onUpdatePost","AdminRouter","Routes","Route","path","Navigate","UserRouter","LoginInput","LoginButton","Login","formData","setFormData","showError","setShowError","onSubmitHandler","ShowError","AuthRouter","PrincipalRouter","setRole","setUserName","_getUser","setItem","getUser","Router","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0789f07d.chunk.js","sourcesContent":["const BASE_URL = \"https://puce-stormy-codfish.cyclic.app/api/v1\";\n\nconst UserServices = {};\n\n//Funciones para conectar con la api\n\nconst getOnePost = async (token, id) => {\n    const response = await fetch(`${BASE_URL}/post/one/${id}`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        const post = await response.json();\n        return post;\n    }\n\n    return {};\n}\n\nUserServices.getOnePost = getOnePost;\n\nUserServices.login = async (username, password) => {\n    const response = await fetch(`${BASE_URL}/auth/signin`, {\n        method: \"POST\",\n        headers: {\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            username: username,\n            password: password\n        })\n    });\n\n    if (response.ok) {\n        const {token} = await response.json();\n        return token;\n    }\n\n    return undefined;\n}\n\nUserServices.verifyToken = async (token) => {\n    const response = await fetch(`${BASE_URL}/auth/whoami`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        const data = await response.json();;\n        return data;\n    }\n\n    return undefined;\n}\n\nUserServices.getAllPosts = async (token, pages) => {\n    const response = await fetch(`${BASE_URL}/post/all?limit=10&page=${pages}`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        const {data:posts} = await response.json();\n        return posts;\n    }\n\n    return [];\n}\n\nUserServices.getOwnedPosts = async (token, pages) => {\n    const response = await fetch(`${BASE_URL}/post/owned?limit=10&page=${pages}}`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        const {data:posts} = await response.json();\n        return posts;\n    }\n\n    return [];\n}\n\nUserServices.getFavoritePosts = async (token) => {\n    const response = await fetch(`${BASE_URL}/post/fav`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        const {favorites} = await response.json();\n\n        const favoritePostsPromises = favorites.map(async(favorite)=>{\n            return await getOnePost(token, favorite);\n        });\n\n        const favoritePosts = await Promise.all(favoritePostsPromises);\n        const filteredPosts = favoritePosts.filter(post => Object.keys(post).length > 0);\n        return filteredPosts;\n    }\n\n    return [];\n}\n\nUserServices.getFavoritesIds = async (token) => {\n    const response = await fetch(`${BASE_URL}/post/fav`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        const {favorites} = await response.json();\n        return favorites;\n    }\n\n    return [];\n}\n\nUserServices.createPost = async (token, post) => {\n    const response = await fetch(`${BASE_URL}/post/create`, {\n        method: \"POST\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(post)\n    });\n\n    if (response.ok) {\n        return true;\n    }\n\n    return false;\n}\n\nUserServices.updatePost = async (token, post, id) => {\n    const response = await fetch(`${BASE_URL}/post/update/${id}`, {\n        method: \"PUT\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(post)\n    });\n\n    if (response.ok) {\n        return true;\n    }\n\n    return false;\n}\n\nUserServices.toggleActive = async (token, id) => {\n    const response = await fetch(`${BASE_URL}/post/toggle/${id}`, {\n        method: \"PATCH\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        return true;\n    }\n\n    return false;\n}\n\nUserServices.like = async (token, id) => {\n    const response = await fetch(`${BASE_URL}/post/like/${id}`, {\n        method: \"PATCH\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        return true;\n    }\n\n    return false;\n}\n\nUserServices.favorite = async (token, id) => {\n    const response = await fetch(`${BASE_URL}/post/fav/${id}`, {\n        method: \"PATCH\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        return true;\n    }\n\n    return false;\n}\n\nUserServices.comment = async (token, comment, id) => {\n    const response = await fetch(`${BASE_URL}/post/comment/${id}`, {\n        method: \"PATCH\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(comment)\n    });\n\n    if (response.ok) {\n        return true;\n    }\n\n    return false;\n}\n\nUserServices.getPagesAll = async (token) => {\n    const response = await fetch(`${BASE_URL}/post/all?limit=10&page=0`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        const {pages} = await response.json();\n        return pages;\n    }\n\n    return [];\n}\n\nUserServices.getPagesOwned = async (token) => {\n    const response = await fetch(`${BASE_URL}/post/owned?limit=10&page=0`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        const {pages} = await response.json();\n        return pages;\n    }\n\n    return [];\n}\nexport default UserServices;","export default __webpack_public_path__ + \"static/media/Logo.5a33dd12.svg\";","import React from 'react'\n\nconst HamburgerMenu = ({showHamburguer, onLogOut, role, onFavoritePost, onAllPosts, onOwnedPosts, onAddPost}) => {\n    let HamburguerMenuStyles = `bg-dark-200 font-semibold z-10 rounded-bl-md flex absolute top-0 right-0 transition-all duration-500 transform translate-x-0\n                            w-1/2 lg:w-auto\n                            px-3 lg:px-0\n                            flex-col lg:flex-row\n                            lg:translate-y-0\n                            lg: top-2\n                            lg:shadow-none\n                            lg:mt-1 lg:items-center lg:mx-1 lg:uppercase\n                            ${showHamburguer ? \"mt-14 shadow\" : \"-translate-y-full\"}`\n\n    //las funciones crear publicacion y ver mis publicaciones solo estan disponibles para administrador\n    return (\n        <div className={HamburguerMenuStyles}>\n            <button onClick={onAllPosts} className=\"font-montserrat text-light-100 font-bold mx-0 sm:mx-2 my-2 border-b-2 border-transparent hover:border-primary-200 hover:text-primary-200 transition-all duration-500 py-1 sm:p-0\">Inicio</button>\n            {role===\"admin\" && <button onClick={onAddPost} className=\"font-montserrat text-light-100 font-bold mx-0 sm:mx-2 my-2 border-b-2 border-transparent hover:border-primary-200 hover:text-primary-200 transition-all duration-500 py-1 sm:p-0\">Crear</button>}\n            <button onClick={onFavoritePost} className=\"font-montserrat text-light-100 font-bold mx-0 sm:mx-2 my-2 border-b-2 border-transparent hover:border-primary-200 hover:text-primary-200 transition-all duration-500 py-1 sm:p-0\">Favoritas</button>\n            {role===\"admin\" && <button onClick={onOwnedPosts} className=\"font-montserrat text-light-100 font-bold mx-0 sm:mx-2 my-2 border-b-2 border-transparent hover:border-primary-200 hover:text-primary-200 transition-all duration-500 py-1 sm:p-0\">Mis publicaciones</button>}\n            <button onClick={onLogOut} className=\"font-montserrat text-light-100 font-bold mx-0 sm:mx-2 my-2 border-b-2 border-transparent hover:border-primary-200 hover:text-primary-200 transition-all duration-500 py-1 sm:p-0\">Cerrar sesión</button>\n        </div>\n    )\n}\n\nexport default HamburgerMenu\n","import React from 'react'\n\nconst MobileMenuButton = ({showHamburguer, setShowHamburguer}) => {\n    let buttonCloseStyles = `w-6 h-6 ${showHamburguer ? \"\" : \"hidden\"}`\n\n    let buttonOpenStyles = `w-6 h-6 ${showHamburguer ? \"hidden\" : \"\"}`\n\n    //Boton para cerrar el menu hamburguesa\n    return (\n        <button id=\"mobileMenuButton\" className=\"p-3 focus:outline-none lg:hidden\" title=\"Open side menu\" onClick={()=>setShowHamburguer(!showHamburguer)}>\n        {/* <!-- SVG For \"x\" button --> */}\n            <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            stroke=\"#E4E6EB\"\n            className={buttonCloseStyles}\n            viewBox=\"0 0 24 24\"\n            >\n            <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M6 18L18 6M6 6l12 12\"\n            ></path>\n            </svg>\n            {/* <!-- SVG For \"Menu burger\" button --> */}\n            <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            stroke=\"#E4E6EB\"            className={buttonOpenStyles}\n            viewBox=\"0 0 24 24\"\n            >\n            <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M4 6h16M4 12h16M4 18h16\"\n            ></path>\n            </svg>\n        </button>\n    )\n}\n\nexport default MobileMenuButton\n","export default __webpack_public_path__ + \"static/media/ImageNotFound.eac72ecf.svg\";","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport ImageNotFound from \"../../../Assets/ImageNotFound.svg\"\n\nconst BodyPost = ({image, title, description, id, active}) => {\n        return (\n                <div>\n                    <div className=\"text-gray-400 font-medium flex justify-center text-sm mb-7 mt-6 mx-3 px-2\">\n                        <img\n                                className=\"rounded\"\n                                src={image}\n                                onError={(e)=>{e.target.onerror = null; e.target.src=ImageNotFound}}\n                                alt={title}\n                        />\n                    </div>\n                    <Link to={active ? `/view/${id}` : \"#\"}>\n                        <p className=\"font-montserrat text-light-200 font-semibold text-lg mb-2 mx-3 px-2 overflow-x-hidden\">\n                            {title}\n                        </p>\n                    </Link>\n                    <p className=\"font-montserrat text-light-200 font-thin text-sm mb-6 mx-3 px-2 overflow-x-hidden\">\n                        {description}\n                    </p>\n                </div>\n        );\n};\n\nexport default BodyPost;\n","import React from \"react\";\n\nconst ShowMessage = ({title, message}) => {\n    return (\n        <div\n            className={`flex bg-transparent rounded-lg p-4 mb-4 w-full text-sm text-primary-200 justify-center`}\n        >\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"currentColor\"\n                className=\"w-5 h-5 inline mr-3\"\n                viewBox=\"0 0 20 20\"\n            >\n                <path\n                    fillRule=\"evenodd\"\n                    d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n                    clipRule=\"evenodd\"\n                ></path>\n            </svg>\n            <div>\n                <span className=\"font-medium\">{title}</span> {message}\n            </div>\n        </div>\n    );\n};\n\nexport default ShowMessage;\n","import React, {useState} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ShowMessage from \"../../LoginComponents/ShowMessage\";\nimport UserServices from \"../../../Services/UserServices\";\n\nconst CommentsPost = ({likes, comments, id, setPosts, active}) => {\n    const {comment} = UserServices;\n    const [commentInput, setCommentInput] = useState({description: \"\"});\n    const [message, setMessage] = useState({message: \"\", title: \"\"});\n    const [showMessage, setShowMessage] = useState(false);\n    const token = localStorage.getItem(\"token\");\n\n    //Obtener lo escrito en el input del comentario\n    const commentInputchange = (e) => {\n        const {name, value} = e.target;\n        setCommentInput({...commentInput, [name]: value});\n    }\n\n    //Funcion para enviar el comentario\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        if(commentInput.description.length < 8){\n            setMessage({message: \"El comentario debe tener al menos 8 caracteres\", title: \"¡Advertencia!\"});\n            setShowMessage(true);\n            return;\n        }\n\n        if(await comment(token, commentInput, id)){\n            setPosts(prev => prev.map(post => post._id === id ? {...post, comments: [...post.comments, commentInput]} : post));\n            setMessage({message: \"El comentario se ha enviado correctamente\", title: \"¡Enhorabuena!\"});\n            setShowMessage(true);\n            setTimeout(() => {setShowMessage(false)}, 5000);\n            setCommentInput({description: \"\"});\n        }else{\n            setMessage({message: \"No se pudo enviar el comentario\", title: \"¡Error!\"});\n            setShowMessage(true);\n        }\n    }\n\n    //Funcion para aproximar el numero de likes y comentarios\n    const TruncateLikesOrComments = (cantidad) => {\n        if(cantidad > 999 && cantidad <= 999999){\n            return `${(cantidad*0.001).toFixed(1)}k`;\n        }\n\n        if(cantidad > 999999){\n            return `${(cantidad*0.000001).toFixed(1)}M`;\n        }\n\n        return cantidad;\n    }\n\n    return (\n        <div>\n            <div className=\"flex w-full border-t border-dark-100 overflow-x-hidden\">\n                <Link to={active ? `/view/${id}` : \"#\"}>\n                    <div className=\"mt-3 mx-5 flex flex-row\">\n                        <div className=\"flex text-light-200 font-normal text-sm rounded-md mb-2 overflow-x-hidden mr-4 items-center\">\n                            Comentarios:\n                            <div className=\"ml-1 text-light-200 font-thin text-ms\">\n                                {TruncateLikesOrComments(comments.length)}\n                            </div>\n                        </div>\n                    </div>\n                </Link>\n                <div className=\"mt-3 mx-5 w-full flex justify-end\">\n                    <div className=\"flex text-light-200 font-normal text-sm overflow-x-hidden rounded-md mb-2 mr-4 items-center\">\n                        Me gustas:\n                        <div className=\"ml-1 text-light-200 font-thin text-ms\">\n                            {TruncateLikesOrComments(likes.length)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {active && (\n                <form onSubmit={onSubmit} className=\"relative flex flex-col items-center self-center w-full max-w-xl p-4 overflow-hidden text-gray-600 focus-within:text-gray-400\">\n                    {showMessage && <ShowMessage title={message.title} message={message.message}/>}         \n                    <div className=\"w-full\">\n                        <span className=\"absolute right-0 flex items-center pr-6\">\n                            <button\n                                type=\"submit\"\n                                className=\"p-1 focus:outline-none focus:shadow-none hover:text-primary-200 text-light-200\"\n                            >\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    class=\"h-6 w-6\"\n                                    viewBox=\"0 0 20 20\"\n                                    fill=\"currentColor\"\n                                >\n                                    <path\n                                        fill-rule=\"evenodd\"\n                                        d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n                                        clip-rule=\"evenodd\"\n                                    />\n                                </svg>\n                            </button>\n                        </span>\n                        <input\n                        type=\"text\"\n                        className=\"w-full py-2 pl-4 pr-10 text-sm bg-dark-100 text-light-100 rounded-lg border border-transparent appearance-none rounded-tg placeholder-gray-400 focus:outline-none focus:text-light-100\"\n                        placeholder=\"Escribir un comentario...\"\n                        autocomplete=\"off\"\n                        value={commentInput.description}\n                        onChange={commentInputchange}\n                        name=\"description\"\n                        required\n                        />\n                    </div>\n                </form>\n            )}\n        </div>\n    );\n};\n\nexport default CommentsPost;\n","import React from 'react'\n\nconst ControlsPost = ({verifyuser, verifyLike, verifyFavorite, onEdit, onHidde, onLike, active, onFavorite}) => {\n    return (\n        <div className=\"flex justify-start mb-4 border-t border-dark-100\">\n        {active && (\n            <div className=\"flex w-full mt-1 pt-2 pl-5\">\n                <button onClick={onLike} className={`flex justify-center items-center bg-dark-100 ${verifyLike ? \"text-primary-200\" : \"text-light-200\"} transition ease-out duration-300 w-10 h-10 text-center rounded-full cursor-pointer mr-2`}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                        <path stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"></path>\n                    </svg>\n                </button>\n                <button onClick={onFavorite} className={`flex justify-center items-center ${verifyFavorite ? \"text-red-500\" : \"text-light-200\"} bg-dark-100 transition ease-out duration-300 w-10 h-10 text-center rounded-full cursor-pointer mr-2`}>\n                    <svg fill=\"none\" width=\"22px\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"></path>\n                    </svg>\n                </button>\n            </div>\n        )}\n        {verifyuser && (\n            <div className=\"flex justify-end w-full mt-1 pt-2 pr-5\">\n                {active && (\n                    <button onClick={onEdit} className=\"flex justify-center items-center bg-dark-100 transition ease-out duration-300 hover:text-primary-200 w-10 h-10 text-center rounded-full text-light-200 cursor-pointer mr-2\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22px\" stroke=\"currentColor\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path d=\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\" />\n                        </svg>\n                    </button>\n                )}\n                <button onClick={onHidde} className={`flex justify-center items-center bg-dark-100 transition ease-out duration-300 ${!active ? \"text-primary-200\" : \"text-light-200\"} w-10 h-10 text-center rounded-full cursor-pointer mr-2`}>\n                    <svg width=\"22px\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                            d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\">\n                        </path>\n                    </svg>\n                </button>\n            </div>\n        )}\n    </div>\n    )\n}\n\nexport default ControlsPost\n","import React from \"react\";\n\nconst HeaderPost = ({username}) => {\n    return (\n        <div>\n            <div className=\"flex align-center mt-2 px-2 py-3 mx-3\">\n                <div className=\"w-auto h-auto rounded-full border-2 border-primary-200\">\n                    <img\n                            className=\"w-12 h-12 object-cover rounded-full shadow\"\n                            alt=\"User avatar\"\n                            src=\"https://www.svgrepo.com/show/33141/elephant.svg\"\n                    />\n                </div>\n                <div className=\"flex items-center ml-4\">\n                    <p className=\"text-light-100 text-lg font-semibold font-montserrat\">{username}</p>\n                </div>\n            </div>\n            <div className=\"border-b border-dark-100\"></div>\n        </div>\n    );\n};\n\nexport default HeaderPost;\n","import React, {useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport BodyPost from \"./BodyPost\";\nimport CommentsPost from \"./CommentsPost\";\nimport ControlsPost from \"./ControlsPost\";\nimport HeaderPost from \"./HeaderPost\";\nimport UserServices from \"../../../Services/UserServices\";\n\nconst Post = ({role, post, activeUsername, setPosts, favorites, setFavorites, setIsHidden, setIsAddingFavorite}) => {\n    const token = localStorage.getItem(\"token\");\n    const {toggleActive, like, getFavoritesIds, favorite} = UserServices;\n    const navigate = useNavigate();\n\n    const {\n        _id,\n        title,\n        description,\n        image,\n        active,\n        user: {username},\n        likes,\n        comments,\n    } = post;\n\n    //Obtener los posts favoritos del usuarios para poder identificar cuales ya han sido agregados\n    useEffect(() => {\n        async function getFavorites() {\n            const favorites = await getFavoritesIds(token);\n            setFavorites(favorites);\n        }\n\n        getFavorites();\n    }, []);\n\n    //Funciones para los botones de las publicaciones\n\n    const onEdit = () => navigate(`/edit/${_id}`);\n\n    const onHidde = async () => {\n        if (await toggleActive(token, _id)) {\n            setPosts((prev) =>\n                prev.map((post) =>\n                    post._id === _id ? {...post, active: !post.active} : post\n                )\n            );\n\n            setIsHidden(prev => !prev);\n        }\n    };\n\n    const onLike = async () => {\n        if (await like(token, _id)) {\n            setPosts((prev) =>\n                prev.map((post) => {\n                    if (post._id === _id) {\n                        const validateLike = (element) => element.username === activeUsername;\n\n                        const newLikes = post.likes.some(validateLike)\n                            ? post.likes.filter(i => i.username !== activeUsername)\n                            : [...post.likes, {username: activeUsername}];\n                            \n                        return {...post, likes: newLikes};\n                    }\n                    return post;\n                })\n            );\n        }\n    };\n\n    const onFavorite = async () => {\n        if(await favorite(token, _id)) {\n            setFavorites((prev) => prev.includes(_id) ? prev.filter(i => i !== _id) : [...prev, _id]);\n            setIsAddingFavorite(prev => !prev);\n        }\n    }\n\n    //Validaciones para los botones de las publicaciones\n    const isActiveUserPost = ((username === activeUsername) && (role === \"admin\")) ? true : false;\n    const alreadyLiked = likes.some((element) => element.username === activeUsername);\n    const isFavorite = favorites.includes(_id);\n\n    return (\n        <div classNameName=\"\">\n            <div className=\"flex max-w-xl my-6 bg-dark-200 shadow-md rounded-lg mx-auto\">\n                <div className=\"flex items-center w-full\">\n                    <div className=\"w-full\">\n                        <HeaderPost username={username} />\n                        <BodyPost\n                            image={image}\n                            title={title}\n                            description={description}\n                            id={_id}\n                            active={active}\n                        />\n                        <ControlsPost\n                            verifyuser={isActiveUserPost}\n                            verifyLike={alreadyLiked}\n                            verifyFavorite={isFavorite}\n                            onEdit={onEdit}\n                            onHidde={onHidde}\n                            active={active}\n                            onLike={onLike}\n                            onFavorite={onFavorite}\n                        />\n                        <CommentsPost \n                            id={_id}\n                            likes={likes}\n                            comments={comments}\n                            setPosts={setPosts}\n                            active={active}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Post;\n","import React from \"react\";\n\nconst Loading = ({message=\"Cargando Publicaciones...\"}) => {\n    return (\n        <div class=\"flex items-center justify-center p-4 m-12\">\n            <div class=\"flex justify-center items-center text-sm text-gray-500\">\n                <svg\n                    fill=\"none\"\n                    className=\"w-6 h-6 sm:w-12 sm:h-12 animate-spin\"\n                    viewBox=\"0 0 32 32\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        clip-rule=\"evenodd\"\n                        d=\"M15.165 8.53a.5.5 0 01-.404.58A7 7 0 1023 16a.5.5 0 011 0 8 8 0 11-9.416-7.874.5.5 0 01.58.404z\"\n                        fill=\"currentColor\"\n                        fill-rule=\"evenodd\"\n                    />\n                </svg>\n\n                <p className=\"text-2xl sm:text-4xl\">\n                    {message}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default Loading;\n","import React, {useState} from \"react\";\nimport Post from \"./Post\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Loading from \"../Loading\";\n\nconst PostList = ({\n    role,\n    posts,\n    username,\n    setPosts,\n    currentPage,\n    setIsHidden,\n    setIsAddingFavorite,\n    fetchNextPage,\n    hasNextPage,\n    isLoading,\n}) => {\n    const [favorites, setFavorites] = useState([]);\n\n    return (\n        <div className=\"pt-10 pb-8 bg-dark-300\">\n            <p className=\"text-center text-2xl font-bold sm:text-4xl mt-16 text-gray-500\">\n                {currentPage}\n            </p>\n            {(posts.length === 0 && !isLoading) &&(\n                <p className=\"text-center text-2xl sm:text-4xl mt-16 text-gray-500\">\n                    No se encontraron publicaciones :c\n                </p>\n            )}\n            {isLoading && (\n                <Loading />\n            )}\n\n            {/*Infinite scroll para la paginacion*/}\n            <InfiniteScroll\n                dataLength={posts.length}\n                next={fetchNextPage}\n                hasMore={hasNextPage}\n                loader={\n                    currentPage !== \"Publicaciones Favoritas\" &&\n                        posts.length > 0 && (\n                            <Loading />\n                        )\n                }\n                endMessage={\n                    posts.length > 0 && (\n                    <p className=\"text-center text-2xl font-bold sm:text-4xl mt-16 text-gray-500 p-4\">\n                        Ya has visto todas las publicaciones\n                    </p>\n                    )\n                }\n            >\n                {\n                    posts.map((post) => (\n                    <Post\n                        key={post._id}\n                        activeUsername={username}\n                        role={role}\n                        post={post}\n                        setPosts={setPosts}\n                        favorites={favorites}\n                        setFavorites={setFavorites}\n                        setIsHidden={setIsHidden}\n                        setIsAddingFavorite={setIsAddingFavorite}\n                    />\n                ))}\n            </InfiniteScroll>\n        </div>\n    );\n};\n\nexport default PostList;\n","import React, {useState, useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport Logo from \"../Assets/Logo.svg\";\nimport HamburgerMenu from \"../Components/HomeComponents/HamburgerMenu\";\nimport MobileMenuButton from \"../Components/HomeComponents/MobileMenuButton\";\nimport PostList from \"../Components/HomeComponents/Feed/PostList\";\nimport UserServices from \"../Services/UserServices\";\n\nconst Home = ({setToken, username, role}) => {\n    //Estaados necesarios para controlar el funcionamiento de la pagina\n    const {getAllPosts, getFavoritePosts, getOwnedPosts, getPagesAll, getPagesOwned} = UserServices;\n    const token = localStorage.getItem(\"token\");\n    const [posts, setPosts] = useState([]);\n    const [currentPage, setCurrentPage] = useState(\"Inicio\");\n    const [pagesAll, setPagesAll] = useState(0);\n    const [pageAll, setPageAll] = useState(0);\n    const [pagesOwned, setPagesOwned] = useState(0);\n    const [pageOwned, setPageOwned] = useState(0);\n    const [hasNextPage, setHasNextPage] = useState(true);\n    const [isHidden, setIsHidden] = useState(false);\n    const [isAddingFavorite, setIsAddingFavorite] = useState(false);\n    const [isChanging, setIsChanging] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [showHamburguer, setShowHamburguer] = useState(false);\n    const navigate = useNavigate();\n\n    //Obtener las publicaciones iniciales que debe mostrar la pagina\n    useEffect(() => {\n        async function getPosts() {\n            const postsFetch = await getAllPosts(token, 0)\n            setIsLoading(false);\n            setPosts(postsFetch);\n            setPagesAll(await getPagesAll(token));\n            setPagesOwned(await getPagesOwned(token));\n        }\n\n        getPosts();\n    }, []);\n\n    //Obtener las publicaciones nuevamente cuando hay un cambio en las publicaciones\n    useEffect(() => {\n        async function getPosts() {\n            if (currentPage === \"Inicio\") {\n                let newPosts = [];\n                const actualPage = pageAll;\n\n                for (let i = 0; i <= pageAll; i++) {\n                    const auxPosts = await getAllPosts(token, i);\n\n                    newPosts = [...newPosts, ...auxPosts];\n                }\n                \n                setPosts(newPosts);\n                setPageAll(actualPage);\n            }\n\n            if (currentPage === \"Publicaciones Favoritas\") {\n                setPosts(await getFavoritePosts(token));\n                setHasNextPage(false);\n            }\n\n            if (currentPage === \"Mis Publicaciones\") {\n                let newPosts = [];\n                const actualPage = pageOwned;\n\n                for (let i = 0; i <= pageOwned; i++) {\n                    const auxPosts = await getOwnedPosts(token, i);\n\n                    newPosts = [...newPosts, ...auxPosts];\n                }\n                \n                setPosts(newPosts);\n                setPageOwned(actualPage);\n            }\n        }\n\n        getPosts();\n    }, [isHidden, isAddingFavorite]);\n\n    //Enviar al usuario al incio de la pagina cuando se cambia la vista de publicaciones a mostrar\n    useEffect(() => {\n        async function whenChange() {\n            window.scrollTo(0, 0);\n        }  \n\n        whenChange();\n    }, [isChanging]);\n\n    // Funcion para cargar las nuevas publicaciones del Infinite Scroll\n    const fetchNextPage = async () => {\n        let newPosts = [];\n\n        if(currentPage === \"Inicio\") {\n            newPosts = await getAllPosts(token, pageAll + 1);\n            setPageAll(prevPage => prevPage + 1);\n        }\n\n        if(currentPage === \"Mis Publicaciones\") {\n            newPosts = await getOwnedPosts(token, pageOwned + 1);\n            setPageOwned(prevPage => prevPage + 1);\n        }\n\n        if((pageAll === pagesAll - 1 && currentPage === \"Inicio\") || (pageOwned === pagesOwned - 1 && currentPage === \"Mis Publicaciones\")) {\n            setHasNextPage(false);\n        }\n        setPosts([...posts, ...newPosts]);\n    }\n\n    // Funciones para los botones del menu de navegacion\n    const onLogOut = () => {\n        setToken(undefined);\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"role\");\n    };\n\n    const onAllPosts = async () => {\n        setPageAll(0);\n        setPosts(await getAllPosts(token, 0));\n        setIsChanging(!isChanging);\n        setCurrentPage(\"Inicio\");  \n        setPagesAll(await getPagesAll(token));\n        setHasNextPage(true);\n    };\n\n    const onFavoritePost = async () => {\n        setPosts(await getFavoritePosts(token));\n        setIsChanging(!isChanging);\n        setCurrentPage(\"Publicaciones Favoritas\");\n        setHasNextPage(false);\n    };\n\n    const onOwnedPosts = async () => {\n        setPageOwned(0);\n        setPosts(await getOwnedPosts(token, 0));\n        setIsChanging(!isChanging);\n        setCurrentPage(\"Mis Publicaciones\");\n        setPagesOwned(await getPagesOwned(token));\n        setHasNextPage(true);\n    };\n\n    const onAddPost = () => navigate(\"/new\");\n\n    return (\n        <section className=\"bg-dark-300 h-screen\">\n            <nav className=\"bg-dark-200 shadow fixed z-10 inset-x-0 top-0 flex justify-between items-center\">\n                <div className=\"w-auto my-2 mx-4 h-12 sm:h-12 inline-flex p-2 sm:p-1\">\n                    <img src={Logo} alt=\"logo\" />\n                </div>\n                <HamburgerMenu\n                    showHamburguer={showHamburguer}\n                    onLogOut={onLogOut}\n                    onFavoritePost={onFavoritePost}\n                    onAllPosts={onAllPosts}\n                    onOwnedPosts={onOwnedPosts}\n                    onAddPost={onAddPost}\n                    role={role}\n                />\n                <MobileMenuButton\n                    showHamburguer={showHamburguer}\n                    setShowHamburguer={setShowHamburguer}\n                />\n            </nav>\n            <PostList\n                username={username}\n                role={role}\n                posts={posts}\n                setPosts={setPosts}\n                currentPage={currentPage}\n                setIsHidden={setIsHidden}\n                setIsAddingFavorite={setIsAddingFavorite}\n                fetchNextPage={fetchNextPage}\n                hasNextPage={hasNextPage}\n                isLoading={isLoading}\n                pagesAll={pagesAll}\n                pageAll={pageAll}\n                pagesOwned={pagesOwned}\n                pageOwned={pageOwned}\n            />\n        </section>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst ButtonPost = ({type = \"button\", child, onReturnHome}) => {\n    return (\n        <button\n            class=\"btn text-1xl rounded-lg border border-primary-200 p-1 px-4 cursor-pointer text-white font-bold ml-2 bg-primary-200 hover:bg-primary-100\"\n            type={type}\n            onClick={onReturnHome}\n        >\n            {child}\n        </button>\n    );\n};\n\nexport default ButtonPost;\n","import React from \"react\";\n\nconst InputPost = ({placeholder, type = \"text\", name, onChange, value, required}) => {\n    return (\n        <input\n            className=\"title bg-gray-100 bg-dark-100 rounded-lg text-light-200 border border-dark-200 focus:text-light-100 p-2 mb-4 outline-none\"\n            placeholder={placeholder}\n            type={type}\n            onChange={onChange}\n            value={value}\n            name={name}\n            required={required}\n        />\n    );\n};\n\nexport default InputPost;\n","import React from \"react\";\n\nconst TextAreaPost = ({placeholder, required, value, onChange, name}) => {\n    return (\n        <textarea\n            class=\"description bg-dark-100 resize-none text-light-200 sec p-3 mb-4 h-60 border rounded-lg border-dark-200 focus:text-light-100 outline-none\"\n            placeholder={placeholder}\n            value={value}\n            name={name}\n            onChange={onChange}\n            required={required}\n        ></textarea>\n    );\n};\n\nexport default TextAreaPost;\n","import React, {useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport UserServices from \"../Services/UserServices\";\nimport ButtonPost from \"../Components/CreateEditPostComponents/ButtonPost\";\nimport InputPost from \"../Components/CreateEditPostComponents/InputPost\";\nimport TextAreaPost from \"../Components/CreateEditPostComponents/TextAreaPost\";\nimport ShowMessage from \"../Components/LoginComponents/ShowMessage\";\n\nconst CreatePost = () => {\n    const {createPost} = UserServices;\n    const [message, setMessage] = useState({message: \"\", title: \"\"});\n    const [showMessage, setShowMessage] = useState(false);\n    const navigate = useNavigate();\n    const token = localStorage.getItem(\"token\");\n\n    const [post, setPost] = useState({\n        title: \"\",\n        description: \"\",\n        image: \"\",\n    });\n\n    //Obtener los datos del formulario\n    const handleInputChange = (e, change) => {\n        const {name, value} = e.target;\n        change({...post, [name]: value});\n    };\n\n    //Funcion para crear la publicacion\n    const onCreatePost = async (e) => {\n        e.preventDefault();\n        const {title, description} = post;\n\n        if((title.length < 8 || title.length > 32)){\n            setMessage({message: \"El título debe tener entre 8 y 32 caracteres\", title: \"¡Advertencia!\"});\n            setShowMessage(true);\n            return;\n        }\n\n        if(description.length < 8){\n            setMessage({message: \"La descripción debe tener al menos 8 caracteres\", title: \"¡Advertencia!\"});\n            setShowMessage(true);\n            return;\n        }\n\n        if(await createPost(token, post)){\n            setMessage({message: \"El post se ha creado correctamente\", title: \"¡Enhorabuena!\"});\n            setShowMessage(true);\n            setTimeout(() => {setShowMessage(false)}, 5000);\n            setPost({title: \"\", description: \"\", image: \"\"});\n        }else{\n            setMessage({message: \"No se pudo crear el post\", title: \"¡Error!\"});\n            setShowMessage(true);\n        }   \n    }\n\n    //Funcion para regresar al inicio\n    const onReturnHome = () => navigate(\"/home\");\n\n    return (\n        <section className=\"flex h-screen bg-dark-300\">\n            <form class=\"m-auto w-full bg-dark-300\" onSubmit={onCreatePost}>\n                <h1 class=\" text-4xl text-light-100 heading text-center font-bold m-5 text-gray-800\">\n                    Nueva publicación\n                </h1>\n                <div class=\"bg-dark-200 rounded-lg editor mx-auto w-10/12 flex flex-col mb-5 text-gray-800 border border-dark-300 p-4 shadow-lg max-w-2xl\">\n                    <InputPost\n                        placeholder=\"Titulo de la publicación\"\n                        onChange={(e) => handleInputChange(e, setPost)}\n                        value={post.title}\n                        name=\"title\"\n                        required=\"true\"\n                    />\n                    <TextAreaPost\n                        placeholder=\"Escriba la descripcion de tu publicación\"\n                        onChange={(e) => handleInputChange(e, setPost)}\n                        value={post.description}\n                        name=\"description\"\n                        required=\"true\"\n                    />\n                    <InputPost\n                        placeholder=\"URL de Imagen\"\n                        onChange={(e) => handleInputChange(e, setPost)}\n                        value={post.image}\n                        name=\"image\"\n                        required=\"true\"\n                    />\n                    {showMessage && <ShowMessage title={message.title} message={message.message}/>}\n                    <div class=\"buttons flex justify-end\">\n                        <ButtonPost\n                            child=\"Cancelar\"\n                            type={\"button\"}\n                            onReturnHome={onReturnHome}\n                        />\n                        <ButtonPost child=\"Publicar\" type={\"submit\"} />\n                    </div>\n                </div>\n            </form>\n        </section>\n    );\n};\n\nexport default CreatePost;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst HeaderDetails = ({username}) => {\n    const navigate = useNavigate();\n\n    const onClick = () => navigate(\"/home\");\n\n    return (\n        <div>\n            <div className=\"flex align-center justify-between mt-2 px-2 py-3 mx-3\">\n                <div class=\"flex\">\n                    <div className=\"w-auto h-auto rounded-full border-2 border-primary-200\">\n                        <img\n                            className=\"w-12 h-12 object-cover rounded-full shadow\"\n                            alt=\"User avatar\"\n                            src=\"https://www.svgrepo.com/show/33141/elephant.svg\"\n                        />\n                    </div>\n                    <div className=\"flex items-center ml-4\">\n                        <p className=\"text-light-100 text-lg font-semibold font-montserrat\">\n                            {username}\n                        </p>\n                    </div>\n                </div>\n                <div class=\"flex justify-center items-center\">\n                    <button  onClick={onClick} className=\"flex justify-center items-center bg-dark-100 transition ease-out duration-300 hover:text-primary-200 w-10 h-10 text-center rounded-full text-light-200 cursor-pointer mr-2\">\n                        <svg\n                            class=\"h-6 w-6\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                            aria-hidden=\"true\"\n                        >\n                            <path\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                stroke-width=\"2\"\n                                d=\"M6 18L18 6M6 6l12 12\"\n                            />\n                        </svg>\n                    </button>\n                </div>\n            </div>\n            <div className=\"border-b border-dark-100\"></div>\n        </div>\n    );\n};\n\nexport default HeaderDetails;\n","import React from \"react\";\nimport ImageNotFound from \"../../Assets/ImageNotFound.svg\"\nconst BodyDetails = ({title, description, image}) => {\n    return (\n        <div>\n            <div className=\"text-gray-400 max-h-128 flex justify-center font-medium text-sm mb-7 mt-6 mx-3 px-2\">\n                <img\n                    className=\"rounded object-contain\"\n                    src={image}\n                    onError={(e)=>{e.target.onerror = null; e.target.src=ImageNotFound}}\n                    alt={title}\n                />\n            </div>\n            <p className=\"font-montserrat text-light-200 font-semibold text-lg mb-2 mx-3 px-2 overflow-x-hidden\">\n                {title}\n            </p>\n            <p className=\"font-montserrat text-light-200 font-thin text-sm mb-6 mx-3 px-2 overflow-x-hidden\">\n                {description}\n            </p>\n        </div>\n    );\n};\n\nexport default BodyDetails;\n","import React from \"react\";\n\nconst ControlsDetails = ({verifyUser, verifyLike, verifyFavorite, onEdit, onLike, onFavorite}) => {\n    return (\n        <div className=\"flex justify-start mb-4 border-t border-dark-100\">\n            <div className=\"flex w-full mt-1 pt-2 pl-5\">\n                <button onClick={onLike} className={`flex justify-center items-center bg-dark-100 transition ease-out duration-300 w-10 h-10 text-center rounded-full ${verifyLike ? \"text-primary-200\" : \"text-light-200\" } cursor-pointer mr-2`}>\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"22px\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                    >\n                        <path\n                            stroke-width=\"2\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n                        ></path>\n                    </svg>\n                </button>\n                <button onClick={onFavorite} className={`flex justify-center items-center ${verifyFavorite ? \"text-red-500\" : \"text-light-200\"} bg-dark-100 transition ease-out duration-300 w-10 h-10 text-center rounded-full cursor-pointer mr-2`}>\n                    <svg\n                        fill=\"none\"\n                        width=\"22px\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            stroke-width=\"2\"\n                            d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                        ></path>\n                    </svg>\n                </button>\n            </div>\n            {verifyUser && (\n            <div className=\"flex justify-end w-full mt-1 pt-2 pr-5\">\n                <button onClick={onEdit} className=\"flex justify-center items-center bg-dark-100 transition ease-out duration-300 hover:text-primary-200 w-10 h-10 text-center rounded-full text-light-200 cursor-pointer mr-2\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"22px\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                        fill=\"currentColor\"\n                    >\n                        <path d=\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\" />\n                    </svg>\n                </button>\n            </div>)}\n        </div>\n    );\n};\n\nexport default ControlsDetails;\n","import React, {useState} from \"react\";\nimport ShowMessage from \"../LoginComponents/ShowMessage\";\nimport UserServices from \"../../Services/UserServices\";\n\nconst CommentFormDetails = ({comments, likes, id, setPost, user}) => {\n    const {comment} = UserServices;\n    const [commentInput, setCommentInput] = useState({description: \"\"});\n    const [message, setMessage] = useState({message: \"\", title: \"\"});\n    const [showMessage, setShowMessage] = useState(false);\n    const token = localStorage.getItem(\"token\");\n\n    //Obtener la informacion del input del comentario\n    const commentInputchange = (e) => {\n        const {name, value} = e.target;\n        setCommentInput({...commentInput, [name]: value});\n    };\n\n    //funcion para enviar un comentario\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        if (commentInput.description.length < 8) {\n            setMessage({\n                message: \"El comentario debe tener al menos 8 caracteres\",\n                title: \"¡Advertencia!\"\n            });\n            setShowMessage(true);\n            return;\n        }\n\n        if (await comment(token, commentInput, id)) {\n            setPost((prev) => ({\n                ...prev,\n                comments: [\n                    ...prev.comments,\n                    {\n                        ...commentInput,\n                        user: {username: user},\n                        _id: `${Date().toLocaleString()}_${user}`,\n                    },\n                ],\n            }));\n            setMessage({\n                message: \"El comentario se ha enviado correctamente\",\n                title: \"¡Enhorabuena!\"\n            });\n            setShowMessage(true);\n            setTimeout(() => {\n                setShowMessage(false);\n            }, 5000);\n            setCommentInput({description: \"\"});\n        } else {\n            setMessage({\n                message: \"No se pudo enviar el comentario\",\n                title: \"¡Error!\"\n            });\n            setShowMessage(true);\n        }\n    };\n\n    //Funcion paa aproximar el numero de likes y comentarios\n    const TruncateLikesOrComments = (cantidad) => {\n        if(cantidad > 999 && cantidad <= 999999){\n            return `${(cantidad*0.001).toFixed(1)}k`;\n        }\n\n        if(cantidad > 999999){\n            return `${(cantidad*0.000001).toFixed(1)}M`;\n        }\n\n        return cantidad;\n    }\n\n    return (\n        <div>\n            <div className=\"flex w-full border-t border-dark-100\">\n                <div className=\"mt-3 mx-5 flex flex-row\">\n                    <div className=\"flex text-light-200 font-normal text-sm rounded-md mb-2 mr-4 items-center\">\n                        Comentarios:\n                        <div className=\"ml-1 text-light-200 font-thin text-ms\">\n                            {TruncateLikesOrComments(comments.length)}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mt-3 mx-5 w-full flex justify-end\">\n                    <div className=\"flex text-light-200 font-normal text-sm rounded-md mb-2 mr-4 items-center\">\n                        Me gustas:\n                        <div className=\"ml-1 text-light-200 font-thin text-ms\">\n                            {TruncateLikesOrComments(likes.length)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <form\n                onSubmit={onSubmit}\n                className=\"relative flex flex-col items-center self-center w-full p-4 overflow-hidden text-gray-600 focus-within:text-gray-400\"\n            >\n                {showMessage && (\n                    <ShowMessage\n                        title={message.title}\n                        message={message.message}\n                    />\n                )}\n                <div className=\"w-full\">\n                    <span className=\"absolute right-0 flex items-center pr-6\">\n                        <button\n                            type=\"submit\"\n                            className=\"p-1 focus:outline-none focus:shadow-none hover:text-primary-200 text-light-200\"\n                        >\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"h-6 w-6\"\n                                viewBox=\"0 0 20 20\"\n                                fill=\"currentColor\"\n                            >\n                                <path\n                                    fill-rule=\"evenodd\"\n                                    d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n                                    clip-rule=\"evenodd\"\n                                />\n                            </svg>\n                        </button>\n                    </span>\n                    <input\n                        type=\"text\"\n                        className=\"w-full py-2 pl-4 pr-10 text-sm bg-dark-100 text-light-100 rounded-lg border border-transparent appearance-none rounded-tg placeholder-gray-400 focus:outline-none focus:text-light-100\"\n                        placeholder=\"Escribir un comentario...\"\n                        autocomplete=\"off\"\n                        value={commentInput.description}\n                        onChange={commentInputchange}\n                        name=\"description\"\n                        required\n                    />\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default CommentFormDetails;\n","import React from \"react\";\n\nconst CommentDetails = ({username, description}) => {\n    return (\n        <div className=\"mt-3 mx-5 mb-6\">\n            <div className=\"bg-dark-100 rounded-lg py-2\">\n                <p className=\"font-montserrat text-light-200 font-semibold text-lg mb-2 mx-3 px-2\">\n                    {username}\n                </p>\n                <p className=\"font-montserrat text-light-200 font-thin text-sm mx-3 px-2 overflow-x-hidden\">\n                    {description}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default CommentDetails;\n","import React from 'react'\nimport CommentDetails from './CommentDetails'\n\nconst CommentListDetails = ({comments}) => {\n    return (\n        <div>\n            {comments.map(({_id, description, user:{username}}) => (\n                <CommentDetails key={_id} description={description} username={username}/>\n            ))}\n        </div>\n    )\n}\n\nexport default CommentListDetails\n","import React, {useState, useEffect} from \"react\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport UserServices from \"../Services/UserServices\";\nimport HeaderDetails from \"../Components/PostDetailsComponents/HeaderDetails\";\nimport BodyDetails from \"../Components/PostDetailsComponents/BodyDetails\";\nimport ControlsDetails from \"../Components/PostDetailsComponents/ControlsDetails\";\nimport CommentFormDetails from \"../Components/PostDetailsComponents/CommentFormDetails\";\nimport CommentListDetails from \"../Components/PostDetailsComponents/CommentListDetails\";\nimport Loading from \"../Components/HomeComponents/Loading\";\n\nconst PostDetails = ({activeUsername, role}) => {\n    const token = localStorage.getItem(\"token\");\n    const navigate = useNavigate();\n    const {like, favorite, getOnePost, getFavoritesIds} = UserServices;\n    const [isLoading, setIsLoading] = useState(true);\n    const [isError, setIsError] = useState(false);\n    const {idPost} = useParams();\n    const [favorites, setFavorites] = useState([]);\n    const [postView, setPostView] = useState({\n        title: \"\",\n        description: \"\",\n        image: \"\",\n        comments: [],\n        username: \"\",\n        likes: [],\n        active: false,\n    });\n\n    //Obtener la informacion del post del cual se quieren ver los detalles\n    useEffect(() => {\n        async function getPost() {\n            const newPost = await getOnePost(token, idPost);\n\n            if (Object.keys(newPost).length) {\n                setPostView({\n                    title: newPost.title,\n                    description: newPost.description,\n                    image: newPost.image,\n                    comments: newPost.comments,\n                    username: newPost.user.username,\n                    likes: newPost.likes,\n                    active: newPost.active,\n                });\n            } else {\n                setPostView({\n                    title: \"La publicación no se ha encontrado :c\",\n                    description:\n                        \"Algo ha salido mal al intentar cargar la publicación\",\n                    image: \"\",\n                    comments: [],\n                    username: \"Usuario no encontrado\",\n                    likes: [],\n                    active: true,\n                });\n\n                setIsError(true);\n            }\n            setIsLoading(false);\n        }\n\n        async function getFavorites() {\n            const favorites = await getFavoritesIds(token);\n            setFavorites(favorites);\n        }\n\n        getPost();\n        getFavorites();\n    }, []);\n\n    //Funciones para los botones de la publicacion \n\n    const onEdit = () => navigate(`/edit/${idPost}`);\n\n    const onLike = async () => {\n        if (await like(token, idPost)) {\n            setPostView((prev) => {\n                const validateLike = (element) =>\n                    element.username === activeUsername;\n\n                const newLikes = prev.likes.some(validateLike)\n                    ? prev.likes.filter((i) => i.username !== activeUsername)\n                    : [...prev.likes, {username: activeUsername}];\n\n                return {...prev, likes: newLikes};\n            });\n        }\n    };\n\n    const onFavorite = async () => {\n        if (await favorite(token, idPost)) {\n            setFavorites((prev) =>\n                prev.includes(idPost)\n                    ? prev.filter((i) => i !== idPost)\n                    : [...prev, idPost]\n            );\n        }\n    };\n\n    //Validaciones para los botones de las publicaciones\n    const isActiveUserPost = postView.username === activeUsername && role === \"admin\" ? true : false;\n    const alreadyLiked = postView.likes.some((element) => element.username === activeUsername);\n    const isFavorite = favorites.includes(idPost);\n\n    return (\n        <section className=\"bg-dark-300 h-screen\">\n            <div className=\"pt-8 pb-8 bg-dark-300\">\n                <div classNameName=\" bg-dark-300\">\n                    {isLoading && <Loading message=\"Cargando publicación...\" />}\n                    {!isLoading && (\n                        <div className=\"flex max-w-6xl my-6 bg-dark-200 shadow-md rounded-lg mx-auto\">\n                            <div className=\"flex items-center w-full\">\n                                <div className=\"w-full\">\n                                    <HeaderDetails\n                                        username={postView.username}\n                                    />\n                                    <BodyDetails\n                                        title={postView.title}\n                                        description={postView.description}\n                                        image={postView.image}\n                                    />\n                                    {!isError && (\n                                        <ControlsDetails\n                                            verifyUser={isActiveUserPost}\n                                            verifyLike={alreadyLiked}\n                                            verifyFavorite={isFavorite}\n                                            onEdit={onEdit}\n                                            onLike={onLike}\n                                            onFavorite={onFavorite}\n                                        />\n                                    )}\n                                    {!isError && (\n                                        <CommentFormDetails\n                                            comments={postView.comments}\n                                            likes={postView.likes}\n                                            id={idPost}\n                                            setPost={setPostView}\n                                            user={activeUsername}\n                                        />\n                                    )}\n                                    {!isError && (\n                                        <CommentListDetails\n                                            comments={postView.comments}\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                        </div>)\n                    }\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default PostDetails;\n","import React, {useEffect, useState} from \"react\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport UserServices from \"../Services/UserServices\";\nimport ButtonPost from \"../Components/CreateEditPostComponents/ButtonPost\";\nimport InputPost from \"../Components/CreateEditPostComponents/InputPost\";\nimport TextAreaPost from \"../Components/CreateEditPostComponents/TextAreaPost\";\nimport ShowMessage from \"../Components/LoginComponents/ShowMessage\";\n\nconst EditPost = () => {\n    const {idPost} = useParams(); //Obtener el id de la publicacion a editar \n    const {updatePost, getOnePost} = UserServices;\n    const [message, setMessage] = useState({message: \"\", title: \"\"});\n    const [showMessage, setShowMessage] = useState(false);\n    const navigate = useNavigate();\n    const token = localStorage.getItem(\"token\");\n    \n    const [post, setPost] = useState({\n        title: \"\",\n        description: \"\",\n        image: \"\",\n    });\n\n    //Traer la informacion de la publicacion a editar\n    useEffect(() => {\n        async function getPost(){\n            const {title, description, image} = await getOnePost(token, idPost);\n            setPost({title, description, image});\n        }\n\n        getPost();\n    } ,[]);\n\n    //Obtener los datos del formulario\n    const handleInputChange = (e, change) => {\n        const {name, value} = e.target;\n        change({...post, [name]: value});\n    };\n\n    //Funcion para editar la publicacion\n    const onUpdatePost = async (e) => {\n        e.preventDefault();\n        const {title, description} = post;\n\n        if((title.length < 8 || title.length > 32)){\n            setMessage({message: \"El título debe tener entre 8 y 32 caracteres\", title: \"¡Advertencia!\"});\n            setShowMessage(true);\n            return;\n        }\n\n        if(description.length < 8){\n            setMessage({message: \"La descripción debe tener al menos 8 caracteres\", title: \"¡Advertencia!\"});\n            setShowMessage(true);\n            return;\n        }\n\n        if(await updatePost(token, post, idPost)){\n            setMessage({message: \"El post se ha editado correctamente\", title: \"¡Enhorabuena!\"});\n            setShowMessage(true);\n            setTimeout(() => {setShowMessage(false)}, 5000);\n        }else{\n            setMessage({message: \"No se pudo editar el post\", title: \"¡Error!\"});\n            setShowMessage(true);\n        }   \n    }\n\n    //Funcion para volver a la pagina de inicio\n    const onReturnHome = () => navigate(\"/home\");\n\n    return (\n        <section className=\"flex h-screen bg-dark-300\">\n            <form class=\"m-auto w-full bg-dark-300\" onSubmit={onUpdatePost}>\n                <h1 class=\" text-4xl text-light-100 heading text-center font-bold m-5 text-gray-800\">\n                    Editar publicación\n                </h1>\n                <div class=\"bg-dark-200 rounded-lg editor mx-auto w-10/12 flex flex-col mb-5 text-gray-800 border border-dark-300 p-4 shadow-lg max-w-2xl\">\n                    <InputPost\n                        placeholder=\"Titulo de la publicación\"\n                        onChange={(e) => handleInputChange(e, setPost)}\n                        value={post.title}\n                        name=\"title\"\n                        required=\"true\"\n                    />\n                    <TextAreaPost\n                        placeholder=\"Escriba la descripcion de tu publicación\"\n                        onChange={(e) => handleInputChange(e, setPost)}\n                        value={post.description}\n                        name=\"description\"\n                        required=\"true\"\n                    />\n                    <InputPost\n                        placeholder=\"URL de Imagen\"\n                        onChange={(e) => handleInputChange(e, setPost)}\n                        value={post.image}\n                        name=\"image\"\n                        required=\"true\"\n                    />\n                    {showMessage && <ShowMessage title={message.title} message={message.message}/>}\n                    <div class=\"buttons flex justify-end\">\n                        <ButtonPost\n                            child=\"Cancelar\"\n                            type={\"button\"}\n                            onReturnHome={onReturnHome}\n                        />\n                        <ButtonPost child=\"Editar\" type={\"submit\"} />\n                    </div>\n                </div>\n            </form>\n        </section>\n    );\n};\n\nexport default EditPost;\n","import React from 'react'\nimport {Route, Routes, Navigate} from 'react-router-dom'\nimport Home from '../Views/Home'\nimport CreatePost from '../Views/CreatePost'\nimport PostDetails from '../Views/PostDetails'\nimport EditPost from '../Views/EditPost'\n\nconst AdminRouter = ({setToken, role, username}) => {\n    //Rutas a las cuales tendra acceso el administrador\n    return (\n        <Routes>\n            <Route path=\"/home\" element={<Home setToken={setToken} role={role} username={username}/>}/>\n            <Route path=\"/new\" element={<CreatePost/>}/>\n            <Route path=\"/view/:idPost\" element={<PostDetails activeUsername={username} role={role}/>}/>\n            <Route path=\"/edit/:idPost\" element={<EditPost/>}/>\n            <Route path=\"*\" element={<Navigate to=\"/home\"/>}/>\n        </Routes> \n    )\n}\n\nexport default AdminRouter","import React from 'react'\nimport {Route, Routes, Navigate} from 'react-router-dom'\nimport Home from '../Views/Home'\nimport PostDetails from '../Views/PostDetails'\n\n\nconst UserRouter = ({setToken, role, username}) => {\n    //Rutas a las cuales tendra acceso el usuario\n    return (\n        <Routes>\n            <Route path=\"/home\" element={<Home setToken={setToken} role={role} username={username}/>}/>\n            <Route path=\"/view/:idPost\" element={<PostDetails activeUsername={username} role={role}/>}/>\n            <Route path=\"*\" element={<Navigate to=\"/home\"/>}/>\n        </Routes> \n    )\n}\n\nexport default UserRouter","import React from \"react\";\n\nconst LoginInput = ({ type = \"text\", name, placeholder, onChange, value}) => {\n    return (\n    <div className=\"pb-2 pt-4\">\n        <input\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        className=\"block w-full p-4 text-lg rounded-sm bg-black font-montserrat\"\n        onChange={onChange}\n        value={value}\n        />\n    </div>\n    );\n};\n\nexport default LoginInput;\n","import React from \"react\";\n\nconst LoginButton = ({child}) => {\n    return (\n        <div className=\"px-4 pb-2 pt-4\">\n            <button\n                type=\"submit\"\n                className=\"uppercase block w-full p-4 text-lg font-montserrat font-bold rounded-full bg-primary-200 hover:bg-primary-100 focus:outline-none\"\n            >\n                {child}\n            </button>\n        </div>\n    );\n};\n\nexport default LoginButton;\n","import React, {useState} from 'react';\nimport LoginInput from '../Components/LoginComponents/LoginInput'\nimport LoginButton from '../Components/LoginComponents/LoginButton'\nimport Logo from '../Assets/Logo.svg'\nimport ShowError from '../Components/LoginComponents/ShowMessage';\nimport UserServices from '../Services/UserServices'\n\nconst Login = ({setToken}) => {\n    const Login = UserServices.login;\n\n    const [formData, setFormData] = useState({\n        user: \"\",\n        password: \"\"\n    });\n\n    const [showError, setShowError] = useState(false);\n\n    //Obtener los datos del formulario\n    const handleInputChange = (e, change) => { \n        const {name, value} = e.target;\n\n        change({...formData, [name]: value});\n    }\n    \n    //Funcion para iniciar sesion\n    const onSubmitHandler = async (e) => {\n        e.preventDefault();\n        \n        const token = await Login(formData.user, formData.password);\n        \n        if(token){\n            setToken(token);\n        }\n        else{\n            setShowError(true);\n            setFormData({user: \"\", password: \"\"})\n        }\n    }\n\n    return (\n        <section className=\"min-h-screen flex items-stretch text-white\">\n        <div className=\"lg:flex w-1/2 hidden bg-gray-500 bg-no-repeat bg-cover relative items-center bg-login-image\">\n            <div className=\"absolute bg-black opacity-60 inset-0 z-0\"></div>\n            <div className=\"w-full px-24 z-10\">\n                <h1 className=\"text-5xl font-bold font-oswald text-left tracking-wide\">Connect with phantastic people</h1>\n            </div>\n        </div>\n\n        <div className=\"lg:w-1/2 w-full flex items-center justify-center text-center md:px-16 px-0 z-0 bg-dark-300\">\n            <div className=\"absolute lg:hidden z-10 inset-0 bg-gray-500 bg-no-repeat bg-cover items-center bg-login-image\">\n                <div className=\"absolute bg-black opacity-60 inset-0 z-0\"></div>\n            </div>\n            <div className=\"w-full py-6 z-20\">\n                <img src={Logo} alt=\"logo\" className=\"w-auto my-6 h-10 sm:h-11 inline-flex\" />\n                <form className=\"sm:w-2/3 w-full px-4 lg:px-0 mx-auto\" onSubmit={onSubmitHandler}>\n                    {showError && <ShowError title=\"¡Advertencia!\" message=\"No se ha podido iniciar sesión, credenciales incorrectas\"/>}\n                    <LoginInput name=\"user\" placeholder=\"User or Email\" onChange={(e)=>handleInputChange(e, setFormData)} value={formData.user}/>\n                    <LoginInput name=\"password\" placeholder=\"Password\" type={\"password\"} onChange={(e)=>handleInputChange(e, setFormData)} value={formData.password}/>\n                    <LoginButton child={\"Login\"}/>\n                </form>\n            </div>\n        </div>\n    </section>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport {Route, Routes, Navigate} from 'react-router-dom'\nimport Login from '../Views/Login'\n\nconst AuthRouter = ({setToken}) => {\n    //Ruta para el login\n    return (\n        <Routes>\n            <Route path=\"/login\" element={<Login setToken={setToken}/>}/>\n            <Route path=\"*\" element={<Navigate to=\"/login\"/>}/>\n        </Routes> \n    )\n}\n\nexport default AuthRouter\n","import React,{useState, useEffect} from 'react'\nimport { HashRouter as Router } from 'react-router-dom'\nimport UserServices from '../Services/UserServices'\nimport AdminRouter from './AdminRouter'\nimport UserRouter from './UserRouter'\nimport AuthRouter from './AuthRouter'\n\nconst PrincipalRouter = () => {\n    const verifyToken = UserServices.verifyToken;\n    const [token, setToken] = useState(localStorage.getItem('token') || undefined);\n    const [role, setRole] = useState(localStorage.getItem('role') || undefined);\n    const [username, setUserName] = useState(undefined);\n\n    useEffect(() => {\n        async function getUser(){\n            if(token){\n                localStorage.setItem('token', token);\n                if(!role || !username){\n                    const user = await verifyToken(token);\n                    localStorage.setItem('role', user.role);\n                    setRole(user.role); \n                    setUserName(user.username);\n                }\n            }else{\n                setRole(undefined);\n            }\n        }\n\n        getUser();\n    }, [token])\n\n    //Renderireccionar al usuario a su respectivo router dependiendo de su rol y sino al lagin\n    return (\n        <Router>\n            {role === \"user\" && <UserRouter setToken={setToken} username={username} role={role}/>}\n            {role === \"admin\" && <AdminRouter setToken={setToken} username={username} role={role}/>}\n            {(!token || !role) && <AuthRouter setToken={setToken} />}\n        </Router>\n    )\n}\n\nexport default PrincipalRouter\n","import PrincipalRouter from './Routes/PrincipalRouter'\n\nfunction App() {\n  return (\n    <PrincipalRouter/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}