{"version":3,"sources":["Services/UserServices.js","Assets/Logo.svg","Components/HomeComponents/HamburgerMenu.jsx","Components/HomeComponents/MobileMenuButton.jsx","Assets/ImageNotFound.svg","Components/HomeComponents/Feed/BodyPost.jsx","Components/LoginComponents/ShowMessage.jsx","Components/HomeComponents/Feed/CommentsPost.jsx","Components/HomeComponents/Feed/ControlsPost.jsx","Components/HomeComponents/Feed/HeaderPost.jsx","Components/HomeComponents/Feed/Post.jsx","Components/HomeComponents/Loading.jsx","Components/HomeComponents/Feed/PostList.jsx","Views/Home.js","Components/CreateEditPostComponents/ButtonPost.jsx","Components/CreateEditPostComponents/InputPost.jsx","Components/CreateEditPostComponents/TextAreaPost.jsx","Views/CreatePost.js","Components/PostDetailsComponents/HeaderDetails.jsx","Components/PostDetailsComponents/BodyDetails.jsx","Components/PostDetailsComponents/ControlsDetails.jsx","Components/PostDetailsComponents/CommentFormDetails.jsx","Components/PostDetailsComponents/CommentDetails.jsx","Components/PostDetailsComponents/CommentListDetails.jsx","Views/PostDetails.js","Views/EditPost.js","Routes/AdminRouter.js","Routes/UserRouter.js","Components/LoginComponents/LoginInput.jsx","Components/LoginComponents/LoginButton.jsx","Views/Login.js","Routes/AuthRouter.js","Routes/PrincipalRouter.js","App.js","index.js"],"names":["BASE_URL","UserServices","getOnePost","token","id","a","fetch","method","headers","response","ok","json","post","login","username","password","body","JSON","stringify","undefined","verifyToken","data","getAllPosts","pages","posts","getOwnedPosts","getFavoritePosts","favorites","favoritePostsPromises","map","favorite","Promise","all","favoritePosts","filteredPosts","filter","Object","keys","length","getFavoritesIds","createPost","updatePost","toggleActive","like","comment","getPagesAll","getPagesOwned","HamburgerMenu","showHamburguer","onLogOut","role","onFavoritePost","onAllPosts","onOwnedPosts","onAddPost","HamburguerMenuStyles","className","onClick","MobileMenuButton","setShowHamburguer","buttonCloseStyles","buttonOpenStyles","title","xmlns","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","BodyPost","image","description","active","src","onError","e","target","onerror","ImageNotFound","alt","to","ShowMessage","message","fillRule","clipRule","CommentsPost","likes","comments","setPosts","useState","commentInput","setCommentInput","setMessage","showMessage","setShowMessage","localStorage","getItem","onSubmit","preventDefault","prev","_id","setTimeout","TruncateLikesOrComments","cantidad","toFixed","type","class","placeholder","autocomplete","value","onChange","name","required","ControlsPost","verifyuser","verifyLike","verifyFavorite","onEdit","onHidde","onLike","onFavorite","width","HeaderPost","Post","activeUsername","setFavorites","setIsHidden","setIsAddingFavorite","navigate","useNavigate","user","useEffect","getFavorites","newLikes","some","element","i","includes","isActiveUserPost","alreadyLiked","isFavorite","classNameName","Loading","PostList","currentPage","fetchNextPage","hasNextPage","isLoading","dataLength","next","hasMore","loader","endMessage","Home","setToken","setCurrentPage","pagesAll","setPagesAll","pageAll","setPageAll","pagesOwned","setPagesOwned","pageOwned","setPageOwned","setHasNextPage","isHidden","isAddingFavorite","isChanging","setIsChanging","setIsLoading","postsFetch","getPosts","newPosts","actualPage","auxPosts","window","scrollTo","whenChange","prevPage","Logo","removeItem","ButtonPost","child","onReturnHome","InputPost","TextAreaPost","CreatePost","setPost","handleInputChange","change","onCreatePost","HeaderDetails","BodyDetails","ControlsDetails","verifyUser","CommentFormDetails","Date","toLocaleString","CommentDetails","CommentListDetails","PostDetails","isError","setIsError","idPost","useParams","postView","setPostView","newPost","getPost","EditPost","onUpdatePost","AdminRouter","path","UserRouter","LoginInput","LoginButton","Login","formData","setFormData","showError","setShowError","onSubmitHandler","AuthRouter","PrincipalRouter","setRole","setUserName","setItem","getUser","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8fb6f3b.chunk.js","sourcesContent":["const BASE_URL = \"https://posts-pw2021.herokuapp.com/api/v1\";\n\nconst UserServices = {};\n\n//Funciones para conectar con la api\n\nconst getOnePost = async (token, id) => {\n    const response = await fetch(`${BASE_URL}/post/one/${id}`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        const post = await response.json();\n        return post;\n    }\n\n    return {};\n}\n\nUserServices.getOnePost = getOnePost;\n\nUserServices.login = async (username, password) => {\n    const response = await fetch(`${BASE_URL}/auth/signin`, {\n        method: \"POST\",\n        headers: {\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            username: username,\n            password: password\n        })\n    });\n\n    if (response.ok) {\n        const {token} = await response.json();\n        return token;\n    }\n\n    return undefined;\n}\n\nUserServices.verifyToken = async (token) => {\n    const response = await fetch(`${BASE_URL}/auth/whoami`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        const data = await response.json();;\n        return data;\n    }\n\n    return undefined;\n}\n\nUserServices.getAllPosts = async (token, pages) => {\n    const response = await fetch(`${BASE_URL}/post/all?limit=10&page=${pages}`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        const {data:posts} = await response.json();\n        return posts;\n    }\n\n    return [];\n}\n\nUserServices.getOwnedPosts = async (token, pages) => {\n    const response = await fetch(`${BASE_URL}/post/owned?limit=10&page=${pages}}`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        const {data:posts} = await response.json();\n        return posts;\n    }\n\n    return [];\n}\n\nUserServices.getFavoritePosts = async (token) => {\n    const response = await fetch(`${BASE_URL}/post/fav`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        const {favorites} = await response.json();\n\n        const favoritePostsPromises = favorites.map(async(favorite)=>{\n            return await getOnePost(token, favorite);\n        });\n\n        const favoritePosts = await Promise.all(favoritePostsPromises);\n        const filteredPosts = favoritePosts.filter(post => Object.keys(post).length > 0);\n        return filteredPosts;\n    }\n\n    return [];\n}\n\nUserServices.getFavoritesIds = async (token) => {\n    const response = await fetch(`${BASE_URL}/post/fav`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        const {favorites} = await response.json();\n        return favorites;\n    }\n\n    return [];\n}\n\nUserServices.createPost = async (token, post) => {\n    const response = await fetch(`${BASE_URL}/post/create`, {\n        method: \"POST\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(post)\n    });\n\n    if (response.ok) {\n        return true;\n    }\n\n    return false;\n}\n\nUserServices.updatePost = async (token, post, id) => {\n    const response = await fetch(`${BASE_URL}/post/update/${id}`, {\n        method: \"PUT\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(post)\n    });\n\n    if (response.ok) {\n        return true;\n    }\n\n    return false;\n}\n\nUserServices.toggleActive = async (token, id) => {\n    const response = await fetch(`${BASE_URL}/post/toggle/${id}`, {\n        method: \"PATCH\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        return true;\n    }\n\n    return false;\n}\n\nUserServices.like = async (token, id) => {\n    const response = await fetch(`${BASE_URL}/post/like/${id}`, {\n        method: \"PATCH\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        return true;\n    }\n\n    return false;\n}\n\nUserServices.favorite = async (token, id) => {\n    const response = await fetch(`${BASE_URL}/post/fav/${id}`, {\n        method: \"PATCH\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        return true;\n    }\n\n    return false;\n}\n\nUserServices.comment = async (token, comment, id) => {\n    const response = await fetch(`${BASE_URL}/post/comment/${id}`, {\n        method: \"PATCH\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(comment)\n    });\n\n    if (response.ok) {\n        return true;\n    }\n\n    return false;\n}\n\nUserServices.getPagesAll = async (token) => {\n    const response = await fetch(`${BASE_URL}/post/all?limit=10&page=0`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        const {pages} = await response.json();\n        return pages;\n    }\n\n    return [];\n}\n\nUserServices.getPagesOwned = async (token) => {\n    const response = await fetch(`${BASE_URL}/post/owned?limit=10&page=0`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    if (response.ok) {\n        const {pages} = await response.json();\n        return pages;\n    }\n\n    return [];\n}\nexport default UserServices;","export default __webpack_public_path__ + \"static/media/Logo.5a33dd12.svg\";","import React from 'react'\n\nconst HamburgerMenu = ({showHamburguer, onLogOut, role, onFavoritePost, onAllPosts, onOwnedPosts, onAddPost}) => {\n    let HamburguerMenuStyles = `bg-dark-200 font-semibold z-10 rounded-bl-md flex absolute top-0 right-0 transition-all duration-500 transform translate-x-0\n                            w-1/2 lg:w-auto\n                            px-3 lg:px-0\n                            flex-col lg:flex-row\n                            lg:translate-y-0\n                            lg: top-2\n                            lg:shadow-none\n                            lg:mt-1 lg:items-center lg:mx-1 lg:uppercase\n                            ${showHamburguer ? \"mt-14 shadow\" : \"-translate-y-full\"}`\n\n    //las funciones crear publicacion y ver mis publicaciones solo estan disponibles para administrador\n    return (\n        <div className={HamburguerMenuStyles}>\n            <button onClick={onAllPosts} className=\"font-montserrat text-light-100 font-bold mx-0 sm:mx-2 my-2 border-b-2 border-transparent hover:border-primary-200 hover:text-primary-200 transition-all duration-500 py-1 sm:p-0\">Inicio</button>\n            {role===\"admin\" && <button onClick={onAddPost} className=\"font-montserrat text-light-100 font-bold mx-0 sm:mx-2 my-2 border-b-2 border-transparent hover:border-primary-200 hover:text-primary-200 transition-all duration-500 py-1 sm:p-0\">Crear</button>}\n            <button onClick={onFavoritePost} className=\"font-montserrat text-light-100 font-bold mx-0 sm:mx-2 my-2 border-b-2 border-transparent hover:border-primary-200 hover:text-primary-200 transition-all duration-500 py-1 sm:p-0\">Favoritas</button>\n            {role===\"admin\" && <button onClick={onOwnedPosts} className=\"font-montserrat text-light-100 font-bold mx-0 sm:mx-2 my-2 border-b-2 border-transparent hover:border-primary-200 hover:text-primary-200 transition-all duration-500 py-1 sm:p-0\">Mis publicaciones</button>}\n            <button onClick={onLogOut} className=\"font-montserrat text-light-100 font-bold mx-0 sm:mx-2 my-2 border-b-2 border-transparent hover:border-primary-200 hover:text-primary-200 transition-all duration-500 py-1 sm:p-0\">Cerrar sesión</button>\n        </div>\n    )\n}\n\nexport default HamburgerMenu\n","import React from 'react'\n\nconst MobileMenuButton = ({showHamburguer, setShowHamburguer}) => {\n    let buttonCloseStyles = `w-6 h-6 ${showHamburguer ? \"\" : \"hidden\"}`\n\n    let buttonOpenStyles = `w-6 h-6 ${showHamburguer ? \"hidden\" : \"\"}`\n\n    //Boton para cerrar el menu hamburguesa\n    return (\n        <button id=\"mobileMenuButton\" className=\"p-3 focus:outline-none lg:hidden\" title=\"Open side menu\" onClick={()=>setShowHamburguer(!showHamburguer)}>\n        {/* <!-- SVG For \"x\" button --> */}\n            <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            stroke=\"#E4E6EB\"\n            className={buttonCloseStyles}\n            viewBox=\"0 0 24 24\"\n            >\n            <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M6 18L18 6M6 6l12 12\"\n            ></path>\n            </svg>\n            {/* <!-- SVG For \"Menu burger\" button --> */}\n            <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            stroke=\"#E4E6EB\"            className={buttonOpenStyles}\n            viewBox=\"0 0 24 24\"\n            >\n            <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M4 6h16M4 12h16M4 18h16\"\n            ></path>\n            </svg>\n        </button>\n    )\n}\n\nexport default MobileMenuButton\n","export default __webpack_public_path__ + \"static/media/ImageNotFound.eac72ecf.svg\";","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport ImageNotFound from \"../../../Assets/ImageNotFound.svg\"\n\nconst BodyPost = ({image, title, description, id, active}) => {\n        return (\n                <div>\n                    <div className=\"text-gray-400 font-medium flex justify-center text-sm mb-7 mt-6 mx-3 px-2\">\n                        <img\n                                className=\"rounded\"\n                                src={image}\n                                onError={(e)=>{e.target.onerror = null; e.target.src=ImageNotFound}}\n                                alt={title}\n                        />\n                    </div>\n                    <Link to={active ? `/view/${id}` : \"#\"}>\n                        <p className=\"font-montserrat text-light-200 font-semibold text-lg mb-2 mx-3 px-2 overflow-x-hidden\">\n                            {title}\n                        </p>\n                    </Link>\n                    <p className=\"font-montserrat text-light-200 font-thin text-sm mb-6 mx-3 px-2 overflow-x-hidden\">\n                        {description}\n                    </p>\n                </div>\n        );\n};\n\nexport default BodyPost;\n","import React from \"react\";\n\nconst ShowMessage = ({title, message}) => {\n    return (\n        <div\n            className={`flex bg-transparent rounded-lg p-4 mb-4 w-full text-sm text-primary-200 justify-center`}\n        >\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"currentColor\"\n                className=\"w-5 h-5 inline mr-3\"\n                viewBox=\"0 0 20 20\"\n            >\n                <path\n                    fillRule=\"evenodd\"\n                    d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n                    clipRule=\"evenodd\"\n                ></path>\n            </svg>\n            <div>\n                <span className=\"font-medium\">{title}</span> {message}\n            </div>\n        </div>\n    );\n};\n\nexport default ShowMessage;\n","import React, {useState} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ShowMessage from \"../../LoginComponents/ShowMessage\";\nimport UserServices from \"../../../Services/UserServices\";\n\nconst CommentsPost = ({likes, comments, id, setPosts, active}) => {\n    const {comment} = UserServices;\n    const [commentInput, setCommentInput] = useState({description: \"\"});\n    const [message, setMessage] = useState({message: \"\", title: \"\"});\n    const [showMessage, setShowMessage] = useState(false);\n    const token = localStorage.getItem(\"token\");\n\n    //Obtener lo escrito en el input del comentario\n    const commentInputchange = (e) => {\n        const {name, value} = e.target;\n        setCommentInput({...commentInput, [name]: value});\n    }\n\n    //Funcion para enviar el comentario\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        if(commentInput.description.length < 8){\n            setMessage({message: \"El comentario debe tener al menos 8 caracteres\", title: \"¡Advertencia!\"});\n            setShowMessage(true);\n            return;\n        }\n\n        if(await comment(token, commentInput, id)){\n            setPosts(prev => prev.map(post => post._id === id ? {...post, comments: [...post.comments, commentInput]} : post));\n            setMessage({message: \"El comentario se ha enviado correctamente\", title: \"¡Enhorabuena!\"});\n            setShowMessage(true);\n            setTimeout(() => {setShowMessage(false)}, 5000);\n            setCommentInput({description: \"\"});\n        }else{\n            setMessage({message: \"No se pudo enviar el comentario\", title: \"¡Error!\"});\n            setShowMessage(true);\n        }\n    }\n\n    //Funcion para aproximar el numero de likes y comentarios\n    const TruncateLikesOrComments = (cantidad) => {\n        if(cantidad > 999 && cantidad <= 999999){\n            return `${(cantidad*0.001).toFixed(1)}k`;\n        }\n\n        if(cantidad > 999999){\n            return `${(cantidad*0.000001).toFixed(1)}M`;\n        }\n\n        return cantidad;\n    }\n\n    return (\n        <div>\n            <div className=\"flex w-full border-t border-dark-100 overflow-x-hidden\">\n                <Link to={active ? `/view/${id}` : \"#\"}>\n                    <div className=\"mt-3 mx-5 flex flex-row\">\n                        <div className=\"flex text-light-200 font-normal text-sm rounded-md mb-2 overflow-x-hidden mr-4 items-center\">\n                            Comentarios:\n                            <div className=\"ml-1 text-light-200 font-thin text-ms\">\n                                {TruncateLikesOrComments(comments.length)}\n                            </div>\n                        </div>\n                    </div>\n                </Link>\n                <div className=\"mt-3 mx-5 w-full flex justify-end\">\n                    <div className=\"flex text-light-200 font-normal text-sm overflow-x-hidden rounded-md mb-2 mr-4 items-center\">\n                        Me gustas:\n                        <div className=\"ml-1 text-light-200 font-thin text-ms\">\n                            {TruncateLikesOrComments(likes.length)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {active && (\n                <form onSubmit={onSubmit} className=\"relative flex flex-col items-center self-center w-full max-w-xl p-4 overflow-hidden text-gray-600 focus-within:text-gray-400\">\n                    {showMessage && <ShowMessage title={message.title} message={message.message}/>}         \n                    <div className=\"w-full\">\n                        <span className=\"absolute right-0 flex items-center pr-6\">\n                            <button\n                                type=\"submit\"\n                                className=\"p-1 focus:outline-none focus:shadow-none hover:text-primary-200 text-light-200\"\n                            >\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    class=\"h-6 w-6\"\n                                    viewBox=\"0 0 20 20\"\n                                    fill=\"currentColor\"\n                                >\n                                    <path\n                                        fill-rule=\"evenodd\"\n                                        d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n                                        clip-rule=\"evenodd\"\n                                    />\n                                </svg>\n                            </button>\n                        </span>\n                        <input\n                        type=\"text\"\n                        className=\"w-full py-2 pl-4 pr-10 text-sm bg-dark-100 text-light-100 rounded-lg border border-transparent appearance-none rounded-tg placeholder-gray-400 focus:outline-none focus:text-light-100\"\n                        placeholder=\"Escribir un comentario...\"\n                        autocomplete=\"off\"\n                        value={commentInput.description}\n                        onChange={commentInputchange}\n                        name=\"description\"\n                        required\n                        />\n                    </div>\n                </form>\n            )}\n        </div>\n    );\n};\n\nexport default CommentsPost;\n","import React from 'react'\n\nconst ControlsPost = ({verifyuser, verifyLike, verifyFavorite, onEdit, onHidde, onLike, active, onFavorite}) => {\n    return (\n        <div className=\"flex justify-start mb-4 border-t border-dark-100\">\n        {active && (\n            <div className=\"flex w-full mt-1 pt-2 pl-5\">\n                <button onClick={onLike} className={`flex justify-center items-center bg-dark-100 ${verifyLike ? \"text-primary-200\" : \"text-light-200\"} transition ease-out duration-300 w-10 h-10 text-center rounded-full cursor-pointer mr-2`}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                        <path stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"></path>\n                    </svg>\n                </button>\n                <button onClick={onFavorite} className={`flex justify-center items-center ${verifyFavorite ? \"text-red-500\" : \"text-light-200\"} bg-dark-100 transition ease-out duration-300 w-10 h-10 text-center rounded-full cursor-pointer mr-2`}>\n                    <svg fill=\"none\" width=\"22px\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"></path>\n                    </svg>\n                </button>\n            </div>\n        )}\n        {verifyuser && (\n            <div className=\"flex justify-end w-full mt-1 pt-2 pr-5\">\n                {active && (\n                    <button onClick={onEdit} className=\"flex justify-center items-center bg-dark-100 transition ease-out duration-300 hover:text-primary-200 w-10 h-10 text-center rounded-full text-light-200 cursor-pointer mr-2\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22px\" stroke=\"currentColor\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path d=\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\" />\n                        </svg>\n                    </button>\n                )}\n                <button onClick={onHidde} className={`flex justify-center items-center bg-dark-100 transition ease-out duration-300 ${!active ? \"text-primary-200\" : \"text-light-200\"} w-10 h-10 text-center rounded-full cursor-pointer mr-2`}>\n                    <svg width=\"22px\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                            d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\">\n                        </path>\n                    </svg>\n                </button>\n            </div>\n        )}\n    </div>\n    )\n}\n\nexport default ControlsPost\n","import React from \"react\";\n\nconst HeaderPost = ({username}) => {\n    return (\n        <div>\n            <div className=\"flex align-center mt-2 px-2 py-3 mx-3\">\n                <div className=\"w-auto h-auto rounded-full border-2 border-primary-200\">\n                    <img\n                            className=\"w-12 h-12 object-cover rounded-full shadow\"\n                            alt=\"User avatar\"\n                            src=\"https://www.svgrepo.com/show/33141/elephant.svg\"\n                    />\n                </div>\n                <div className=\"flex items-center ml-4\">\n                    <p className=\"text-light-100 text-lg font-semibold font-montserrat\">{username}</p>\n                </div>\n            </div>\n            <div className=\"border-b border-dark-100\"></div>\n        </div>\n    );\n};\n\nexport default HeaderPost;\n","import React, {useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport BodyPost from \"./BodyPost\";\nimport CommentsPost from \"./CommentsPost\";\nimport ControlsPost from \"./ControlsPost\";\nimport HeaderPost from \"./HeaderPost\";\nimport UserServices from \"../../../Services/UserServices\";\n\nconst Post = ({role, post, activeUsername, setPosts, favorites, setFavorites, setIsHidden, setIsAddingFavorite}) => {\n    const token = localStorage.getItem(\"token\");\n    const {toggleActive, like, getFavoritesIds, favorite} = UserServices;\n    const navigate = useNavigate();\n\n    const {\n        _id,\n        title,\n        description,\n        image,\n        active,\n        user: {username},\n        likes,\n        comments,\n    } = post;\n\n    //Obtener los posts favoritos del usuarios para poder identificar cuales ya han sido agregados\n    useEffect(() => {\n        async function getFavorites() {\n            const favorites = await getFavoritesIds(token);\n            setFavorites(favorites);\n        }\n\n        getFavorites();\n    }, []);\n\n    //Funciones para los botones de las publicaciones\n\n    const onEdit = () => navigate(`/edit/${_id}`);\n\n    const onHidde = async () => {\n        if (await toggleActive(token, _id)) {\n            setPosts((prev) =>\n                prev.map((post) =>\n                    post._id === _id ? {...post, active: !post.active} : post\n                )\n            );\n\n            setIsHidden(prev => !prev);\n        }\n    };\n\n    const onLike = async () => {\n        if (await like(token, _id)) {\n            setPosts((prev) =>\n                prev.map((post) => {\n                    if (post._id === _id) {\n                        const validateLike = (element) => element.username === activeUsername;\n\n                        const newLikes = post.likes.some(validateLike)\n                            ? post.likes.filter(i => i.username !== activeUsername)\n                            : [...post.likes, {username: activeUsername}];\n                            \n                        return {...post, likes: newLikes};\n                    }\n                    return post;\n                })\n            );\n        }\n    };\n\n    const onFavorite = async () => {\n        if(await favorite(token, _id)) {\n            setFavorites((prev) => prev.includes(_id) ? prev.filter(i => i !== _id) : [...prev, _id]);\n            setIsAddingFavorite(prev => !prev);\n        }\n    }\n\n    //Validaciones para los botones de las publicaciones\n    const isActiveUserPost = ((username === activeUsername) && (role === \"admin\")) ? true : false;\n    const alreadyLiked = likes.some((element) => element.username === activeUsername);\n    const isFavorite = favorites.includes(_id);\n\n    return (\n        <div classNameName=\"\">\n            <div className=\"flex max-w-xl my-6 bg-dark-200 shadow-md rounded-lg mx-auto\">\n                <div className=\"flex items-center w-full\">\n                    <div className=\"w-full\">\n                        <HeaderPost username={username} />\n                        <BodyPost\n                            image={image}\n                            title={title}\n                            description={description}\n                            id={_id}\n                            active={active}\n                        />\n                        <ControlsPost\n                            verifyuser={isActiveUserPost}\n                            verifyLike={alreadyLiked}\n                            verifyFavorite={isFavorite}\n                            onEdit={onEdit}\n                            onHidde={onHidde}\n                            active={active}\n                            onLike={onLike}\n                            onFavorite={onFavorite}\n                        />\n                        <CommentsPost \n                            id={_id}\n                            likes={likes}\n                            comments={comments}\n                            setPosts={setPosts}\n                            active={active}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Post;\n","import React from \"react\";\n\nconst Loading = ({message=\"Cargando Publicaciones...\"}) => {\n    return (\n        <div class=\"flex items-center justify-center p-4 m-12\">\n            <div class=\"flex justify-center items-center text-sm text-gray-500\">\n                <svg\n                    fill=\"none\"\n                    className=\"w-6 h-6 sm:w-12 sm:h-12 animate-spin\"\n                    viewBox=\"0 0 32 32\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        clip-rule=\"evenodd\"\n                        d=\"M15.165 8.53a.5.5 0 01-.404.58A7 7 0 1023 16a.5.5 0 011 0 8 8 0 11-9.416-7.874.5.5 0 01.58.404z\"\n                        fill=\"currentColor\"\n                        fill-rule=\"evenodd\"\n                    />\n                </svg>\n\n                <p className=\"text-2xl sm:text-4xl\">\n                    {message}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default Loading;\n","import React, {useState} from \"react\";\nimport Post from \"./Post\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Loading from \"../Loading\";\n\nconst PostList = ({\n    role,\n    posts,\n    username,\n    setPosts,\n    currentPage,\n    setIsHidden,\n    setIsAddingFavorite,\n    fetchNextPage,\n    hasNextPage,\n    isLoading,\n}) => {\n    const [favorites, setFavorites] = useState([]);\n\n    return (\n        <div className=\"pt-10 pb-8 bg-dark-300\">\n            <p className=\"text-center text-2xl font-bold sm:text-4xl mt-16 text-gray-500\">\n                {currentPage}\n            </p>\n            {(posts.length === 0 && !isLoading) &&(\n                <p className=\"text-center text-2xl sm:text-4xl mt-16 text-gray-500\">\n                    No se encontraron publicaciones :c\n                </p>\n            )}\n            {isLoading && (\n                <Loading />\n            )}\n\n            {/*Infinite scroll para la paginacion*/}\n            <InfiniteScroll\n                dataLength={posts.length}\n                next={fetchNextPage}\n                hasMore={hasNextPage}\n                loader={\n                    currentPage !== \"Publicaciones Favoritas\" &&\n                        posts.length > 0 && (\n                            <Loading />\n                        )\n                }\n                endMessage={\n                    posts.length > 0 && (\n                    <p className=\"text-center text-2xl font-bold sm:text-4xl mt-16 text-gray-500 p-4\">\n                        Ya has visto todas las publicaciones\n                    </p>\n                    )\n                }\n            >\n                {\n                    posts.map((post) => (\n                    <Post\n                        key={post._id}\n                        activeUsername={username}\n                        role={role}\n                        post={post}\n                        setPosts={setPosts}\n                        favorites={favorites}\n                        setFavorites={setFavorites}\n                        setIsHidden={setIsHidden}\n                        setIsAddingFavorite={setIsAddingFavorite}\n                    />\n                ))}\n            </InfiniteScroll>\n        </div>\n    );\n};\n\nexport default PostList;\n","import React, {useState, useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport Logo from \"../Assets/Logo.svg\";\nimport HamburgerMenu from \"../Components/HomeComponents/HamburgerMenu\";\nimport MobileMenuButton from \"../Components/HomeComponents/MobileMenuButton\";\nimport PostList from \"../Components/HomeComponents/Feed/PostList\";\nimport UserServices from \"../Services/UserServices\";\n\nconst Home = ({setToken, username, role}) => {\n    //Estaados necesarios para controlar el funcionamiento de la pagina\n    const {getAllPosts, getFavoritePosts, getOwnedPosts, getPagesAll, getPagesOwned} = UserServices;\n    const token = localStorage.getItem(\"token\");\n    const [posts, setPosts] = useState([]);\n    const [currentPage, setCurrentPage] = useState(\"Inicio\");\n    const [pagesAll, setPagesAll] = useState(0);\n    const [pageAll, setPageAll] = useState(0);\n    const [pagesOwned, setPagesOwned] = useState(0);\n    const [pageOwned, setPageOwned] = useState(0);\n    const [hasNextPage, setHasNextPage] = useState(true);\n    const [isHidden, setIsHidden] = useState(false);\n    const [isAddingFavorite, setIsAddingFavorite] = useState(false);\n    const [isChanging, setIsChanging] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [showHamburguer, setShowHamburguer] = useState(false);\n    const navigate = useNavigate();\n\n    //Obtener las publicaciones iniciales que debe mostrar la pagina\n    useEffect(() => {\n        async function getPosts() {\n            const postsFetch = await getAllPosts(token, 0)\n            setIsLoading(false);\n            setPosts(postsFetch);\n            setPagesAll(await getPagesAll(token));\n            setPagesOwned(await getPagesOwned(token));\n        }\n\n        getPosts();\n    }, []);\n\n    //Obtener las publicaciones nuevamente cuando hay un cambio en las publicaciones\n    useEffect(() => {\n        async function getPosts() {\n            if (currentPage === \"Inicio\") {\n                let newPosts = [];\n                const actualPage = pageAll;\n\n                for (let i = 0; i <= pageAll; i++) {\n                    const auxPosts = await getAllPosts(token, i);\n\n                    newPosts = [...newPosts, ...auxPosts];\n                }\n                \n                setPosts(newPosts);\n                setPageAll(actualPage);\n            }\n\n            if (currentPage === \"Publicaciones Favoritas\") {\n                setPosts(await getFavoritePosts(token));\n                setHasNextPage(false);\n            }\n\n            if (currentPage === \"Mis Publicaciones\") {\n                let newPosts = [];\n                const actualPage = pageOwned;\n\n                for (let i = 0; i <= pageOwned; i++) {\n                    const auxPosts = await getOwnedPosts(token, i);\n\n                    newPosts = [...newPosts, ...auxPosts];\n                }\n                \n                setPosts(newPosts);\n                setPageOwned(actualPage);\n            }\n        }\n\n        getPosts();\n    }, [isHidden, isAddingFavorite]);\n\n    //Enviar al usuario al incio de la pagina cuando se cambia la vista de publicaciones a mostrar\n    useEffect(() => {\n        async function whenChange() {\n            window.scrollTo(0, 0);\n        }  \n\n        whenChange();\n    }, [isChanging]);\n\n    // Funcion para cargar las nuevas publicaciones del Infinite Scroll\n    const fetchNextPage = async () => {\n        let newPosts = [];\n\n        if(currentPage === \"Inicio\") {\n            newPosts = await getAllPosts(token, pageAll + 1);\n            setPageAll(prevPage => prevPage + 1);\n        }\n\n        if(currentPage === \"Mis Publicaciones\") {\n            newPosts = await getOwnedPosts(token, pageOwned + 1);\n            setPageOwned(prevPage => prevPage + 1);\n        }\n\n        if((pageAll === pagesAll - 1 && currentPage === \"Inicio\") || (pageOwned === pagesOwned - 1 && currentPage === \"Mis Publicaciones\")) {\n            setHasNextPage(false);\n        }\n        setPosts([...posts, ...newPosts]);\n    }\n\n    // Funciones para los botones del menu de navegacion\n    const onLogOut = () => {\n        setToken(undefined);\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"role\");\n    };\n\n    const onAllPosts = async () => {\n        setPageAll(0);\n        setPosts(await getAllPosts(token, 0));\n        setIsChanging(!isChanging);\n        setCurrentPage(\"Inicio\");  \n        setPagesAll(await getPagesAll(token));\n        setHasNextPage(true);\n    };\n\n    const onFavoritePost = async () => {\n        setPosts(await getFavoritePosts(token));\n        setIsChanging(!isChanging);\n        setCurrentPage(\"Publicaciones Favoritas\");\n        setHasNextPage(false);\n    };\n\n    const onOwnedPosts = async () => {\n        setPageOwned(0);\n        setPosts(await getOwnedPosts(token, 0));\n        setIsChanging(!isChanging);\n        setCurrentPage(\"Mis Publicaciones\");\n        setPagesOwned(await getPagesOwned(token));\n        setHasNextPage(true);\n    };\n\n    const onAddPost = () => navigate(\"/new\");\n\n    return (\n        <section className=\"bg-dark-300 h-screen\">\n            <nav className=\"bg-dark-200 shadow fixed z-10 inset-x-0 top-0 flex justify-between items-center\">\n                <div className=\"w-auto my-2 mx-4 h-12 sm:h-12 inline-flex p-2 sm:p-1\">\n                    <img src={Logo} alt=\"logo\" />\n                </div>\n                <HamburgerMenu\n                    showHamburguer={showHamburguer}\n                    onLogOut={onLogOut}\n                    onFavoritePost={onFavoritePost}\n                    onAllPosts={onAllPosts}\n                    onOwnedPosts={onOwnedPosts}\n                    onAddPost={onAddPost}\n                    role={role}\n                />\n                <MobileMenuButton\n                    showHamburguer={showHamburguer}\n                    setShowHamburguer={setShowHamburguer}\n                />\n            </nav>\n            <PostList\n                username={username}\n                role={role}\n                posts={posts}\n                setPosts={setPosts}\n                currentPage={currentPage}\n                setIsHidden={setIsHidden}\n                setIsAddingFavorite={setIsAddingFavorite}\n                fetchNextPage={fetchNextPage}\n                hasNextPage={hasNextPage}\n                isLoading={isLoading}\n                pagesAll={pagesAll}\n                pageAll={pageAll}\n                pagesOwned={pagesOwned}\n                pageOwned={pageOwned}\n            />\n        </section>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst ButtonPost = ({type = \"button\", child, onReturnHome}) => {\n    return (\n        <button\n            class=\"btn text-1xl rounded-lg border border-primary-200 p-1 px-4 cursor-pointer text-white font-bold ml-2 bg-primary-200 hover:bg-primary-100\"\n            type={type}\n            onClick={onReturnHome}\n        >\n            {child}\n        </button>\n    );\n};\n\nexport default ButtonPost;\n","import React from \"react\";\n\nconst InputPost = ({placeholder, type = \"text\", name, onChange, value, required}) => {\n    return (\n        <input\n            className=\"title bg-gray-100 bg-dark-100 rounded-lg text-light-200 border border-dark-200 focus:text-light-100 p-2 mb-4 outline-none\"\n            placeholder={placeholder}\n            type={type}\n            onChange={onChange}\n            value={value}\n            name={name}\n            required={required}\n        />\n    );\n};\n\nexport default InputPost;\n","import React from \"react\";\n\nconst TextAreaPost = ({placeholder, required, value, onChange, name}) => {\n    return (\n        <textarea\n            class=\"description bg-dark-100 resize-none text-light-200 sec p-3 mb-4 h-60 border rounded-lg border-dark-200 focus:text-light-100 outline-none\"\n            placeholder={placeholder}\n            value={value}\n            name={name}\n            onChange={onChange}\n            required={required}\n        ></textarea>\n    );\n};\n\nexport default TextAreaPost;\n","import React, {useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport UserServices from \"../Services/UserServices\";\nimport ButtonPost from \"../Components/CreateEditPostComponents/ButtonPost\";\nimport InputPost from \"../Components/CreateEditPostComponents/InputPost\";\nimport TextAreaPost from \"../Components/CreateEditPostComponents/TextAreaPost\";\nimport ShowMessage from \"../Components/LoginComponents/ShowMessage\";\n\nconst CreatePost = () => {\n    const {createPost} = UserServices;\n    const [message, setMessage] = useState({message: \"\", title: \"\"});\n    const [showMessage, setShowMessage] = useState(false);\n    const navigate = useNavigate();\n    const token = localStorage.getItem(\"token\");\n\n    const [post, setPost] = useState({\n        title: \"\",\n        description: \"\",\n        image: \"\",\n    });\n\n    //Obtener los datos del formulario\n    const handleInputChange = (e, change) => {\n        const {name, value} = e.target;\n        change({...post, [name]: value});\n    };\n\n    //Funcion para crear la publicacion\n    const onCreatePost = async (e) => {\n        e.preventDefault();\n        const {title, description} = post;\n\n        if((title.length < 8 || title.length > 32)){\n            setMessage({message: \"El título debe tener entre 8 y 32 caracteres\", title: \"¡Advertencia!\"});\n            setShowMessage(true);\n            return;\n        }\n\n        if(description.length < 8){\n            setMessage({message: \"La descripción debe tener al menos 8 caracteres\", title: \"¡Advertencia!\"});\n            setShowMessage(true);\n            return;\n        }\n\n        if(await createPost(token, post)){\n            setMessage({message: \"El post se ha creado correctamente\", title: \"¡Enhorabuena!\"});\n            setShowMessage(true);\n            setTimeout(() => {setShowMessage(false)}, 5000);\n            setPost({title: \"\", description: \"\", image: \"\"});\n        }else{\n            setMessage({message: \"No se pudo crear el post\", title: \"¡Error!\"});\n            setShowMessage(true);\n        }   \n    }\n\n    //Funcion para regresar al inicio\n    const onReturnHome = () => navigate(\"/home\");\n\n    return (\n        <section className=\"flex h-screen bg-dark-300\">\n            <form class=\"m-auto w-full bg-dark-300\" onSubmit={onCreatePost}>\n                <h1 class=\" text-4xl text-light-100 heading text-center font-bold m-5 text-gray-800\">\n                    Nueva publicación\n                </h1>\n                <div class=\"bg-dark-200 rounded-lg editor mx-auto w-10/12 flex flex-col mb-5 text-gray-800 border border-dark-300 p-4 shadow-lg max-w-2xl\">\n                    <InputPost\n                        placeholder=\"Titulo de la publicación\"\n                        onChange={(e) => handleInputChange(e, setPost)}\n                        value={post.title}\n                        name=\"title\"\n                        required=\"true\"\n                    />\n                    <TextAreaPost\n                        placeholder=\"Escriba la descripcion de tu publicación\"\n                        onChange={(e) => handleInputChange(e, setPost)}\n                        value={post.description}\n                        name=\"description\"\n                        required=\"true\"\n                    />\n                    <InputPost\n                        placeholder=\"URL de Imagen\"\n                        onChange={(e) => handleInputChange(e, setPost)}\n                        value={post.image}\n                        name=\"image\"\n                        required=\"true\"\n                    />\n                    {showMessage && <ShowMessage title={message.title} message={message.message}/>}\n                    <div class=\"buttons flex justify-end\">\n                        <ButtonPost\n                            child=\"Cancelar\"\n                            type={\"button\"}\n                            onReturnHome={onReturnHome}\n                        />\n                        <ButtonPost child=\"Publicar\" type={\"submit\"} />\n                    </div>\n                </div>\n            </form>\n        </section>\n    );\n};\n\nexport default CreatePost;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst HeaderDetails = ({username}) => {\n    const navigate = useNavigate();\n\n    const onClick = () => navigate(\"/home\");\n\n    return (\n        <div>\n            <div className=\"flex align-center justify-between mt-2 px-2 py-3 mx-3\">\n                <div class=\"flex\">\n                    <div className=\"w-auto h-auto rounded-full border-2 border-primary-200\">\n                        <img\n                            className=\"w-12 h-12 object-cover rounded-full shadow\"\n                            alt=\"User avatar\"\n                            src=\"https://www.svgrepo.com/show/33141/elephant.svg\"\n                        />\n                    </div>\n                    <div className=\"flex items-center ml-4\">\n                        <p className=\"text-light-100 text-lg font-semibold font-montserrat\">\n                            {username}\n                        </p>\n                    </div>\n                </div>\n                <div class=\"flex justify-center items-center\">\n                    <button  onClick={onClick} className=\"flex justify-center items-center bg-dark-100 transition ease-out duration-300 hover:text-primary-200 w-10 h-10 text-center rounded-full text-light-200 cursor-pointer mr-2\">\n                        <svg\n                            class=\"h-6 w-6\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                            aria-hidden=\"true\"\n                        >\n                            <path\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                stroke-width=\"2\"\n                                d=\"M6 18L18 6M6 6l12 12\"\n                            />\n                        </svg>\n                    </button>\n                </div>\n            </div>\n            <div className=\"border-b border-dark-100\"></div>\n        </div>\n    );\n};\n\nexport default HeaderDetails;\n","import React from \"react\";\nimport ImageNotFound from \"../../Assets/ImageNotFound.svg\"\nconst BodyDetails = ({title, description, image}) => {\n    return (\n        <div>\n            <div className=\"text-gray-400 max-h-128 flex justify-center font-medium text-sm mb-7 mt-6 mx-3 px-2\">\n                <img\n                    className=\"rounded object-contain\"\n                    src={image}\n                    onError={(e)=>{e.target.onerror = null; e.target.src=ImageNotFound}}\n                    alt={title}\n                />\n            </div>\n            <p className=\"font-montserrat text-light-200 font-semibold text-lg mb-2 mx-3 px-2 overflow-x-hidden\">\n                {title}\n            </p>\n            <p className=\"font-montserrat text-light-200 font-thin text-sm mb-6 mx-3 px-2 overflow-x-hidden\">\n                {description}\n            </p>\n        </div>\n    );\n};\n\nexport default BodyDetails;\n","import React from \"react\";\n\nconst ControlsDetails = ({verifyUser, verifyLike, verifyFavorite, onEdit, onLike, onFavorite}) => {\n    return (\n        <div className=\"flex justify-start mb-4 border-t border-dark-100\">\n            <div className=\"flex w-full mt-1 pt-2 pl-5\">\n                <button onClick={onLike} className={`flex justify-center items-center bg-dark-100 transition ease-out duration-300 w-10 h-10 text-center rounded-full ${verifyLike ? \"text-primary-200\" : \"text-light-200\" } cursor-pointer mr-2`}>\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"22px\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                    >\n                        <path\n                            stroke-width=\"2\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n                        ></path>\n                    </svg>\n                </button>\n                <button onClick={onFavorite} className={`flex justify-center items-center ${verifyFavorite ? \"text-red-500\" : \"text-light-200\"} bg-dark-100 transition ease-out duration-300 w-10 h-10 text-center rounded-full cursor-pointer mr-2`}>\n                    <svg\n                        fill=\"none\"\n                        width=\"22px\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            stroke-width=\"2\"\n                            d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                        ></path>\n                    </svg>\n                </button>\n            </div>\n            {verifyUser && (\n            <div className=\"flex justify-end w-full mt-1 pt-2 pr-5\">\n                <button onClick={onEdit} className=\"flex justify-center items-center bg-dark-100 transition ease-out duration-300 hover:text-primary-200 w-10 h-10 text-center rounded-full text-light-200 cursor-pointer mr-2\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"22px\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                        fill=\"currentColor\"\n                    >\n                        <path d=\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\" />\n                    </svg>\n                </button>\n            </div>)}\n        </div>\n    );\n};\n\nexport default ControlsDetails;\n","import React, {useState} from \"react\";\nimport ShowMessage from \"../LoginComponents/ShowMessage\";\nimport UserServices from \"../../Services/UserServices\";\n\nconst CommentFormDetails = ({comments, likes, id, setPost, user}) => {\n    const {comment} = UserServices;\n    const [commentInput, setCommentInput] = useState({description: \"\"});\n    const [message, setMessage] = useState({message: \"\", title: \"\"});\n    const [showMessage, setShowMessage] = useState(false);\n    const token = localStorage.getItem(\"token\");\n\n    //Obtener la informacion del input del comentario\n    const commentInputchange = (e) => {\n        const {name, value} = e.target;\n        setCommentInput({...commentInput, [name]: value});\n    };\n\n    //funcion para enviar un comentario\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        if (commentInput.description.length < 8) {\n            setMessage({\n                message: \"El comentario debe tener al menos 8 caracteres\",\n                title: \"¡Advertencia!\"\n            });\n            setShowMessage(true);\n            return;\n        }\n\n        if (await comment(token, commentInput, id)) {\n            setPost((prev) => ({\n                ...prev,\n                comments: [\n                    ...prev.comments,\n                    {\n                        ...commentInput,\n                        user: {username: user},\n                        _id: `${Date().toLocaleString()}_${user}`,\n                    },\n                ],\n            }));\n            setMessage({\n                message: \"El comentario se ha enviado correctamente\",\n                title: \"¡Enhorabuena!\"\n            });\n            setShowMessage(true);\n            setTimeout(() => {\n                setShowMessage(false);\n            }, 5000);\n            setCommentInput({description: \"\"});\n        } else {\n            setMessage({\n                message: \"No se pudo enviar el comentario\",\n                title: \"¡Error!\"\n            });\n            setShowMessage(true);\n        }\n    };\n\n    //Funcion paa aproximar el numero de likes y comentarios\n    const TruncateLikesOrComments = (cantidad) => {\n        if(cantidad > 999 && cantidad <= 999999){\n            return `${(cantidad*0.001).toFixed(1)}k`;\n        }\n\n        if(cantidad > 999999){\n            return `${(cantidad*0.000001).toFixed(1)}M`;\n        }\n\n        return cantidad;\n    }\n\n    return (\n        <div>\n            <div className=\"flex w-full border-t border-dark-100\">\n                <div className=\"mt-3 mx-5 flex flex-row\">\n                    <div className=\"flex text-light-200 font-normal text-sm rounded-md mb-2 mr-4 items-center\">\n                        Comentarios:\n                        <div className=\"ml-1 text-light-200 font-thin text-ms\">\n                            {TruncateLikesOrComments(comments.length)}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mt-3 mx-5 w-full flex justify-end\">\n                    <div className=\"flex text-light-200 font-normal text-sm rounded-md mb-2 mr-4 items-center\">\n                        Me gustas:\n                        <div className=\"ml-1 text-light-200 font-thin text-ms\">\n                            {TruncateLikesOrComments(likes.length)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <form\n                onSubmit={onSubmit}\n                className=\"relative flex flex-col items-center self-center w-full p-4 overflow-hidden text-gray-600 focus-within:text-gray-400\"\n            >\n                {showMessage && (\n                    <ShowMessage\n                        title={message.title}\n                        message={message.message}\n                    />\n                )}\n                <div className=\"w-full\">\n                    <span className=\"absolute right-0 flex items-center pr-6\">\n                        <button\n                            type=\"submit\"\n                            className=\"p-1 focus:outline-none focus:shadow-none hover:text-primary-200 text-light-200\"\n                        >\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"h-6 w-6\"\n                                viewBox=\"0 0 20 20\"\n                                fill=\"currentColor\"\n                            >\n                                <path\n                                    fill-rule=\"evenodd\"\n                                    d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n                                    clip-rule=\"evenodd\"\n                                />\n                            </svg>\n                        </button>\n                    </span>\n                    <input\n                        type=\"text\"\n                        className=\"w-full py-2 pl-4 pr-10 text-sm bg-dark-100 text-light-100 rounded-lg border border-transparent appearance-none rounded-tg placeholder-gray-400 focus:outline-none focus:text-light-100\"\n                        placeholder=\"Escribir un comentario...\"\n                        autocomplete=\"off\"\n                        value={commentInput.description}\n                        onChange={commentInputchange}\n                        name=\"description\"\n                        required\n                    />\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default CommentFormDetails;\n","import React from \"react\";\n\nconst CommentDetails = ({username, description}) => {\n    return (\n        <div className=\"mt-3 mx-5 mb-6\">\n            <div className=\"bg-dark-100 rounded-lg py-2\">\n                <p className=\"font-montserrat text-light-200 font-semibold text-lg mb-2 mx-3 px-2\">\n                    {username}\n                </p>\n                <p className=\"font-montserrat text-light-200 font-thin text-sm mx-3 px-2 overflow-x-hidden\">\n                    {description}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default CommentDetails;\n","import React from 'react'\nimport CommentDetails from './CommentDetails'\n\nconst CommentListDetails = ({comments}) => {\n    return (\n        <div>\n            {comments.map(({_id, description, user:{username}}) => (\n                <CommentDetails key={_id} description={description} username={username}/>\n            ))}\n        </div>\n    )\n}\n\nexport default CommentListDetails\n","import React, {useState, useEffect} from \"react\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport UserServices from \"../Services/UserServices\";\nimport HeaderDetails from \"../Components/PostDetailsComponents/HeaderDetails\";\nimport BodyDetails from \"../Components/PostDetailsComponents/BodyDetails\";\nimport ControlsDetails from \"../Components/PostDetailsComponents/ControlsDetails\";\nimport CommentFormDetails from \"../Components/PostDetailsComponents/CommentFormDetails\";\nimport CommentListDetails from \"../Components/PostDetailsComponents/CommentListDetails\";\nimport Loading from \"../Components/HomeComponents/Loading\";\n\nconst PostDetails = ({activeUsername, role}) => {\n    const token = localStorage.getItem(\"token\");\n    const navigate = useNavigate();\n    const {like, favorite, getOnePost, getFavoritesIds} = UserServices;\n    const [isLoading, setIsLoading] = useState(true);\n    const [isError, setIsError] = useState(false);\n    const {idPost} = useParams();\n    const [favorites, setFavorites] = useState([]);\n    const [postView, setPostView] = useState({\n        title: \"\",\n        description: \"\",\n        image: \"\",\n        comments: [],\n        username: \"\",\n        likes: [],\n        active: false,\n    });\n\n    //Obtener la informacion del post del cual se quieren ver los detalles\n    useEffect(() => {\n        async function getPost() {\n            const newPost = await getOnePost(token, idPost);\n\n            if (Object.keys(newPost).length) {\n                setPostView({\n                    title: newPost.title,\n                    description: newPost.description,\n                    image: newPost.image,\n                    comments: newPost.comments,\n                    username: newPost.user.username,\n                    likes: newPost.likes,\n                    active: newPost.active,\n                });\n            } else {\n                setPostView({\n                    title: \"La publicación no se ha encontrado :c\",\n                    description:\n                        \"Algo ha salido mal al intentar cargar la publicación\",\n                    image: \"\",\n                    comments: [],\n                    username: \"Usuario no encontrado\",\n                    likes: [],\n                    active: true,\n                });\n\n                setIsError(true);\n            }\n            setIsLoading(false);\n        }\n\n        async function getFavorites() {\n            const favorites = await getFavoritesIds(token);\n            setFavorites(favorites);\n        }\n\n        getPost();\n        getFavorites();\n    }, []);\n\n    //Funciones para los botones de la publicacion \n\n    const onEdit = () => navigate(`/edit/${idPost}`);\n\n    const onLike = async () => {\n        if (await like(token, idPost)) {\n            setPostView((prev) => {\n                const validateLike = (element) =>\n                    element.username === activeUsername;\n\n                const newLikes = prev.likes.some(validateLike)\n                    ? prev.likes.filter((i) => i.username !== activeUsername)\n                    : [...prev.likes, {username: activeUsername}];\n\n                return {...prev, likes: newLikes};\n            });\n        }\n    };\n\n    const onFavorite = async () => {\n        if (await favorite(token, idPost)) {\n            setFavorites((prev) =>\n                prev.includes(idPost)\n                    ? prev.filter((i) => i !== idPost)\n                    : [...prev, idPost]\n            );\n        }\n    };\n\n    //Validaciones para los botones de las publicaciones\n    const isActiveUserPost = postView.username === activeUsername && role === \"admin\" ? true : false;\n    const alreadyLiked = postView.likes.some((element) => element.username === activeUsername);\n    const isFavorite = favorites.includes(idPost);\n\n    return (\n        <section className=\"bg-dark-300 h-screen\">\n            <div className=\"pt-8 pb-8 bg-dark-300\">\n                <div classNameName=\" bg-dark-300\">\n                    {isLoading && <Loading message=\"Cargando publicación...\" />}\n                    {!isLoading && (\n                        <div className=\"flex max-w-6xl my-6 bg-dark-200 shadow-md rounded-lg mx-auto\">\n                            <div className=\"flex items-center w-full\">\n                                <div className=\"w-full\">\n                                    <HeaderDetails\n                                        username={postView.username}\n                                    />\n                                    <BodyDetails\n                                        title={postView.title}\n                                        description={postView.description}\n                                        image={postView.image}\n                                    />\n                                    {!isError && (\n                                        <ControlsDetails\n                                            verifyUser={isActiveUserPost}\n                                            verifyLike={alreadyLiked}\n                                            verifyFavorite={isFavorite}\n                                            onEdit={onEdit}\n                                            onLike={onLike}\n                                            onFavorite={onFavorite}\n                                        />\n                                    )}\n                                    {!isError && (\n                                        <CommentFormDetails\n                                            comments={postView.comments}\n                                            likes={postView.likes}\n                                            id={idPost}\n                                            setPost={setPostView}\n                                            user={activeUsername}\n                                        />\n                                    )}\n                                    {!isError && (\n                                        <CommentListDetails\n                                            comments={postView.comments}\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                        </div>)\n                    }\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default PostDetails;\n","import React, {useEffect, useState} from \"react\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport UserServices from \"../Services/UserServices\";\nimport ButtonPost from \"../Components/CreateEditPostComponents/ButtonPost\";\nimport InputPost from \"../Components/CreateEditPostComponents/InputPost\";\nimport TextAreaPost from \"../Components/CreateEditPostComponents/TextAreaPost\";\nimport ShowMessage from \"../Components/LoginComponents/ShowMessage\";\n\nconst EditPost = () => {\n    const {idPost} = useParams(); //Obtener el id de la publicacion a editar \n    const {updatePost, getOnePost} = UserServices;\n    const [message, setMessage] = useState({message: \"\", title: \"\"});\n    const [showMessage, setShowMessage] = useState(false);\n    const navigate = useNavigate();\n    const token = localStorage.getItem(\"token\");\n    \n    const [post, setPost] = useState({\n        title: \"\",\n        description: \"\",\n        image: \"\",\n    });\n\n    //Traer la informacion de la publicacion a editar\n    useEffect(() => {\n        async function getPost(){\n            const {title, description, image} = await getOnePost(token, idPost);\n            setPost({title, description, image});\n        }\n\n        getPost();\n    } ,[]);\n\n    //Obtener los datos del formulario\n    const handleInputChange = (e, change) => {\n        const {name, value} = e.target;\n        change({...post, [name]: value});\n    };\n\n    //Funcion para editar la publicacion\n    const onUpdatePost = async (e) => {\n        e.preventDefault();\n        const {title, description} = post;\n\n        if((title.length < 8 || title.length > 32)){\n            setMessage({message: \"El título debe tener entre 8 y 32 caracteres\", title: \"¡Advertencia!\"});\n            setShowMessage(true);\n            return;\n        }\n\n        if(description.length < 8){\n            setMessage({message: \"La descripción debe tener al menos 8 caracteres\", title: \"¡Advertencia!\"});\n            setShowMessage(true);\n            return;\n        }\n\n        if(await updatePost(token, post, idPost)){\n            setMessage({message: \"El post se ha editado correctamente\", title: \"¡Enhorabuena!\"});\n            setShowMessage(true);\n            setTimeout(() => {setShowMessage(false)}, 5000);\n        }else{\n            setMessage({message: \"No se pudo editar el post\", title: \"¡Error!\"});\n            setShowMessage(true);\n        }   \n    }\n\n    //Funcion para volver a la pagina de inicio\n    const onReturnHome = () => navigate(\"/home\");\n\n    return (\n        <section className=\"flex h-screen bg-dark-300\">\n            <form class=\"m-auto w-full bg-dark-300\" onSubmit={onUpdatePost}>\n                <h1 class=\" text-4xl text-light-100 heading text-center font-bold m-5 text-gray-800\">\n                    Editar publicación\n                </h1>\n                <div class=\"bg-dark-200 rounded-lg editor mx-auto w-10/12 flex flex-col mb-5 text-gray-800 border border-dark-300 p-4 shadow-lg max-w-2xl\">\n                    <InputPost\n                        placeholder=\"Titulo de la publicación\"\n                        onChange={(e) => handleInputChange(e, setPost)}\n                        value={post.title}\n                        name=\"title\"\n                        required=\"true\"\n                    />\n                    <TextAreaPost\n                        placeholder=\"Escriba la descripcion de tu publicación\"\n                        onChange={(e) => handleInputChange(e, setPost)}\n                        value={post.description}\n                        name=\"description\"\n                        required=\"true\"\n                    />\n                    <InputPost\n                        placeholder=\"URL de Imagen\"\n                        onChange={(e) => handleInputChange(e, setPost)}\n                        value={post.image}\n                        name=\"image\"\n                        required=\"true\"\n                    />\n                    {showMessage && <ShowMessage title={message.title} message={message.message}/>}\n                    <div class=\"buttons flex justify-end\">\n                        <ButtonPost\n                            child=\"Cancelar\"\n                            type={\"button\"}\n                            onReturnHome={onReturnHome}\n                        />\n                        <ButtonPost child=\"Editar\" type={\"submit\"} />\n                    </div>\n                </div>\n            </form>\n        </section>\n    );\n};\n\nexport default EditPost;\n","import React from 'react'\nimport {Route, Routes, Navigate} from 'react-router-dom'\nimport Home from '../Views/Home'\nimport CreatePost from '../Views/CreatePost'\nimport PostDetails from '../Views/PostDetails'\nimport EditPost from '../Views/EditPost'\n\nconst AdminRouter = ({setToken, role, username}) => {\n    //Rutas a las cuales tendra acceso el administrador\n    return (\n        <Routes>\n            <Route path=\"/home\" element={<Home setToken={setToken} role={role} username={username}/>}/>\n            <Route path=\"/new\" element={<CreatePost/>}/>\n            <Route path=\"/view/:idPost\" element={<PostDetails activeUsername={username} role={role}/>}/>\n            <Route path=\"/edit/:idPost\" element={<EditPost/>}/>\n            <Route path=\"*\" element={<Navigate to=\"/home\"/>}/>\n        </Routes> \n    )\n}\n\nexport default AdminRouter","import React from 'react'\nimport {Route, Routes, Navigate} from 'react-router-dom'\nimport Home from '../Views/Home'\nimport PostDetails from '../Views/PostDetails'\n\n\nconst UserRouter = ({setToken, role, username}) => {\n    //Rutas a las cuales tendra acceso el usuario\n    return (\n        <Routes>\n            <Route path=\"/home\" element={<Home setToken={setToken} role={role} username={username}/>}/>\n            <Route path=\"/view/:idPost\" element={<PostDetails activeUsername={username} role={role}/>}/>\n            <Route path=\"*\" element={<Navigate to=\"/home\"/>}/>\n        </Routes> \n    )\n}\n\nexport default UserRouter","import React from \"react\";\n\nconst LoginInput = ({ type = \"text\", name, placeholder, onChange, value}) => {\n    return (\n    <div className=\"pb-2 pt-4\">\n        <input\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        className=\"block w-full p-4 text-lg rounded-sm bg-black font-montserrat\"\n        onChange={onChange}\n        value={value}\n        />\n    </div>\n    );\n};\n\nexport default LoginInput;\n","import React from \"react\";\n\nconst LoginButton = ({child}) => {\n    return (\n        <div className=\"px-4 pb-2 pt-4\">\n            <button\n                type=\"submit\"\n                className=\"uppercase block w-full p-4 text-lg font-montserrat font-bold rounded-full bg-primary-200 hover:bg-primary-100 focus:outline-none\"\n            >\n                {child}\n            </button>\n        </div>\n    );\n};\n\nexport default LoginButton;\n","import React, {useState} from 'react';\nimport LoginInput from '../Components/LoginComponents/LoginInput'\nimport LoginButton from '../Components/LoginComponents/LoginButton'\nimport Logo from '../Assets/Logo.svg'\nimport ShowError from '../Components/LoginComponents/ShowMessage';\nimport UserServices from '../Services/UserServices'\n\nconst Login = ({setToken}) => {\n    const Login = UserServices.login;\n\n    const [formData, setFormData] = useState({\n        user: \"\",\n        password: \"\"\n    });\n\n    const [showError, setShowError] = useState(false);\n\n    //Obtener los datos del formulario\n    const handleInputChange = (e, change) => { \n        const {name, value} = e.target;\n\n        change({...formData, [name]: value});\n    }\n    \n    //Funcion para iniciar sesion\n    const onSubmitHandler = async (e) => {\n        e.preventDefault();\n        \n        const token = await Login(formData.user, formData.password);\n        \n        if(token){\n            setToken(token);\n        }\n        else{\n            setShowError(true);\n            setFormData({user: \"\", password: \"\"})\n        }\n    }\n\n    return (\n        <section className=\"min-h-screen flex items-stretch text-white\">\n        <div className=\"lg:flex w-1/2 hidden bg-gray-500 bg-no-repeat bg-cover relative items-center bg-login-image\">\n            <div className=\"absolute bg-black opacity-60 inset-0 z-0\"></div>\n            <div className=\"w-full px-24 z-10\">\n                <h1 className=\"text-5xl font-bold font-oswald text-left tracking-wide\">Connect with phantastic people</h1>\n            </div>\n        </div>\n\n        <div className=\"lg:w-1/2 w-full flex items-center justify-center text-center md:px-16 px-0 z-0 bg-dark-300\">\n            <div className=\"absolute lg:hidden z-10 inset-0 bg-gray-500 bg-no-repeat bg-cover items-center bg-login-image\">\n                <div className=\"absolute bg-black opacity-60 inset-0 z-0\"></div>\n            </div>\n            <div className=\"w-full py-6 z-20\">\n                <img src={Logo} alt=\"logo\" className=\"w-auto my-6 h-10 sm:h-11 inline-flex\" />\n                <form className=\"sm:w-2/3 w-full px-4 lg:px-0 mx-auto\" onSubmit={onSubmitHandler}>\n                    {showError && <ShowError title=\"¡Advertencia!\" message=\"No se ha podido iniciar sesión, credenciales incorrectas\"/>}\n                    <LoginInput name=\"user\" placeholder=\"User or Email\" onChange={(e)=>handleInputChange(e, setFormData)} value={formData.user}/>\n                    <LoginInput name=\"password\" placeholder=\"Password\" type={\"password\"} onChange={(e)=>handleInputChange(e, setFormData)} value={formData.password}/>\n                    <LoginButton child={\"Login\"}/>\n                </form>\n            </div>\n        </div>\n    </section>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport {Route, Routes, Navigate} from 'react-router-dom'\nimport Login from '../Views/Login'\n\nconst AuthRouter = ({setToken}) => {\n    //Ruta para el login\n    return (\n        <Routes>\n            <Route path=\"/login\" element={<Login setToken={setToken}/>}/>\n            <Route path=\"*\" element={<Navigate to=\"/login\"/>}/>\n        </Routes> \n    )\n}\n\nexport default AuthRouter\n","import React,{useState, useEffect} from 'react'\nimport { HashRouter as Router } from 'react-router-dom'\nimport UserServices from '../Services/UserServices'\nimport AdminRouter from './AdminRouter'\nimport UserRouter from './UserRouter'\nimport AuthRouter from './AuthRouter'\n\nconst PrincipalRouter = () => {\n    const verifyToken = UserServices.verifyToken;\n    const [token, setToken] = useState(localStorage.getItem('token') || undefined);\n    const [role, setRole] = useState(localStorage.getItem('role') || undefined);\n    const [username, setUserName] = useState(undefined);\n\n    useEffect(() => {\n        async function getUser(){\n            if(token){\n                localStorage.setItem('token', token);\n                if(!role || !username){\n                    const user = await verifyToken(token);\n                    localStorage.setItem('role', user.role);\n                    setRole(user.role); \n                    setUserName(user.username);\n                }\n            }else{\n                setRole(undefined);\n            }\n        }\n\n        getUser();\n    }, [token])\n\n    //Renderireccionar al usuario a su respectivo router dependiendo de su rol y sino al lagin\n    return (\n        <Router>\n            {role === \"user\" && <UserRouter setToken={setToken} username={username} role={role}/>}\n            {role === \"admin\" && <AdminRouter setToken={setToken} username={username} role={role}/>}\n            {(!token || !role) && <AuthRouter setToken={setToken} />}\n        </Router>\n    )\n}\n\nexport default PrincipalRouter\n","import PrincipalRouter from './Routes/PrincipalRouter'\n\nfunction App() {\n  return (\n    <PrincipalRouter/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}